@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<link rel="stylesheet" href="~/css/attend.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css">

<div class="dashboard-card bg-white p-4">
    <h5 class="mb-4 text-primary"><i class="fas fa-calendar-alt me-2"></i> Chấm công nâng cao</h5>

    <div class="row mb-3">
        <div class="col-md-6">
            <div class="form-group">
                <label for="workDateRange" class="form-label">Chọn ngày làm việc</label>
                <input type="text" class="form-control date-range" id="workDateRange" placeholder="Chọn ngày làm việc">
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered" id="workScheduleTable">
            <thead class="thead-light">
                <tr>
                    <th>Ngày làm việc</th>
                    <th>Giờ vào</th>
                    <th>Giờ ra</th>
                    <th>Số giờ tăng ca</th>
                    <th>Số giờ bù</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="workScheduleBody"></tbody>
        </table>
    </div>
</div>

<!-- Action Modal -->
<div class="modal fade" id="actionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thực hiện hành động</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="attendanceSection" class="mb-3">
                    <h6>Chấm công</h6>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="checkInTime">Giờ vào</label>
                                <input type="time" class="form-control" id="checkInTime">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="checkOutTime">Giờ ra</label>
                                <div class="d-flex">
                                    <input type="time" class="form-control me-2" id="checkOutTime">
                                    <button class="btn btn-outline-secondary" id="set8hBtn" title="Tự động điền giờ làm từ 8h đến 18h">8h</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mt-2">
                        <label for="attendanceNote">Ghi chú chấm công</label>
                        <textarea class="form-control" id="attendanceNote" rows="2"></textarea>
                    </div>
                </div>

                <div id="overtimeSection" class="mb-3">
                    <h6>Tăng ca</h6>
                    <div class="btn-group mb-2">
                        <button class="btn btn-outline-primary" id="ot1h">1 giờ</button>
                        <button class="btn btn-outline-primary" id="ot2h">2 giờ</button>
                        <button class="btn btn-outline-primary" id="ot3h">3 giờ</button>
                        <button class="btn btn-outline-primary" id="ot4h">4 giờ</button>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="otCheckInTime">Giờ vào tăng ca</label>
                                <input type="time" class="form-control" id="otCheckInTime" value="18:00">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="otCheckOutTime">Giờ ra tăng ca</label>
                                <input type="time" class="form-control" id="otCheckOutTime">
                            </div>
                        </div>
                    </div>
                    <div class="form-group mt-2">
                        <label for="overtimeNote">Ghi chú tăng ca</label>
                        <textarea class="form-control" id="overtimeNote" rows="2"></textarea>
                    </div>
                </div>

                <div id="compensationSection" class="mb-3">
                    <h6>Bù giờ</h6>
                    <div class="btn-group mb-2">
                        <button class="btn btn-outline-success" id="comp1h">1 giờ</button>
                        <button class="btn btn-outline-success" id="comp2h">2 giờ</button>
                        <button class="btn btn-outline-success" id="comp3h">3 giờ</button>
                        <button class="btn btn-outline-success" id="comp4h">4 giờ</button>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="compCheckInTime">Giờ vào bù</label>
                                <input type="time" class="form-control" id="compCheckInTime">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="compCheckOutTime">Giờ ra bù</label>
                                <input type="time" class="form-control" id="compCheckOutTime">
                            </div>
                        </div>
                    </div>
                    <div class="form-group mt-2">
                        <label for="compensationNote">Ghi chú bù giờ</label>
                        <textarea class="form-control" id="compensationNote" rows="2"></textarea>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" id="submitAll">Lưu</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let selectedWorkDays = [];
    let currentSelectedDate = null;

    // Initialize date picker
    flatpickr("#workDateRange", {
        mode: "range",
        dateFormat: "d/m/Y",
        weekNumbers: true,
        locale: {
            firstDayOfWeek: 1 // Monday
        },
        disable: [date => date.getDay() === 0], // Disable Sundays
        onClose: handleDateRangeClose
    });

    function handleDateRangeClose(selectedDates) {
        selectedWorkDays = [];
        if (selectedDates.length === 2) {
            let currentDate = new Date(selectedDates[0]);
            const endDate = new Date(selectedDates[1]);

            while (currentDate <= endDate) {
                if (currentDate.getDay() >= 1 && currentDate.getDay() <= 6) {
                    selectedWorkDays.push(formatDateToYMD(currentDate));
                }
                currentDate.setDate(currentDate.getDate() + 1);
            }
        } else if (selectedDates.length === 1) {
            const selectedDate = selectedDates[0];
            if (selectedDate.getDay() !== 0) {
                selectedWorkDays.push(formatDateToYMD(selectedDate));
            }
        }
        updateWorkScheduleTable();
    }

    function formatDateToYMD(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}-${month}-${day}`;
    }

    function formatDate(date) {
        const day = String(date.getDate()).padStart(2, '0');
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const year = date.getFullYear();
        return `${day}/${month}/${year}`;
    }

    function updateWorkScheduleTable() {
        const tbody = document.getElementById('workScheduleBody');
        tbody.innerHTML = '';

        selectedWorkDays.forEach(date => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${formatDate(new Date(date))}</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>-</td>
                <td>
                    <button class="btn btn-primary btn-sm" onclick="showActionModal('${date}')">
                        <i class="fas fa-edit"></i>
                    </button>
                </td>
            `;
            tbody.appendChild(row);
        });
    }

    function showActionModal(date) {
        currentSelectedDate = date;
        const modal = new bootstrap.Modal(document.getElementById('actionModal'));
        modal.show();
    }

    // Update overtime buttons to set end time
    ['1h', '2h', '3h', '4h'].forEach(hours => {
        document.getElementById(`ot${hours}`).addEventListener('click', () => {
            const overtimeHours = parseInt(hours);
            document.getElementById('otCheckInTime').value = '18:00';
            document.getElementById('otCheckOutTime').value = `${18 + overtimeHours}:00`;
        });
    });

    // Update compensation buttons to set end time
    ['1h', '2h', '3h', '4h'].forEach(hours => {
        document.getElementById(`comp${hours}`).addEventListener('click', () => {
            const compHours = parseInt(hours);
            const startTime = document.getElementById('compCheckInTime').value || '08:00';
            const startHour = parseInt(startTime.split(':')[0]);
            document.getElementById('compCheckOutTime').value = `${startHour + compHours}:00`;
        });
    });

    // Submit all data
    document.getElementById('submitAll').addEventListener('click', async () => {
        const checkInTime = document.getElementById('checkInTime').value;
        const checkOutTime = document.getElementById('checkOutTime').value;
        const attendanceNote = document.getElementById('attendanceNote').value;
        const otCheckInTime = document.getElementById('otCheckInTime').value;
        const otCheckOutTime = document.getElementById('otCheckOutTime').value;
        const overtimeNote = document.getElementById('overtimeNote').value;
        const compCheckInTime = document.getElementById('compCheckInTime').value;
        const compCheckOutTime = document.getElementById('compCheckOutTime').value;
        const compensationNote = document.getElementById('compensationNote').value;

        if (!checkInTime || !checkOutTime) {
            Swal.fire('Lỗi!', 'Vui lòng nhập đầy đủ giờ vào và giờ ra chấm công', 'error');
            return;
        }

        try {
            const data = {
                attendance: [{
                    NgayLamViec: currentSelectedDate,
                    GioVao: checkInTime,
                    GioRa: checkOutTime,
                    TongGio: calculateHours(checkInTime, checkOutTime),
                    TrangThai: 'Chờ duyệt',
                    GhiChu: attendanceNote
                }]
            };

            if (otCheckInTime && otCheckOutTime) {
                data.overtime = [{
                    NgayTangCa: currentSelectedDate,
                    GioVaoTangCa: otCheckInTime,
                    GioRaTangCa: otCheckOutTime,
                    SoGioTangCa: calculateHours(otCheckInTime, otCheckOutTime),
                    GhiChu: overtimeNote
                }];
            }

            if (compCheckInTime && compCheckOutTime) {
                data.compensation = [{
                    NgayBu: currentSelectedDate,
                    GioVaoBu: compCheckInTime,
                    GioRaBu: compCheckOutTime,
                    SoGioBu: calculateHours(compCheckInTime, compCheckOutTime),
                    GhiChu: compensationNote
                }];
            }

            const response = await fetch('/api/Attendance/SubmitAttendance', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            if (result.success) {
                Swal.fire('Thành công!', 'Dữ liệu đã được lưu thành công', 'success');
                updateWorkScheduleTable();
                bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
            } else {
                Swal.fire('Lỗi!', result.message, 'error');
            }
        } catch (error) {
            Swal.fire('Lỗi!', 'Có lỗi xảy ra khi lưu dữ liệu', 'error');
        }
    });

    // Add event listener for 8h button
    document.getElementById('set8hBtn').addEventListener('click', () => {
        document.getElementById('checkInTime').value = '08:00';
        document.getElementById('checkOutTime').value = '18:00';
    });

    function calculateHours(startTime, endTime) {
        const start = new Date(`2000-01-01T${startTime}`);
        const end = new Date(`2000-01-01T${endTime}`);
        let hours = (end - start) / (1000 * 60 * 60);
        return parseFloat(hours.toFixed(2));
    }
</script> 