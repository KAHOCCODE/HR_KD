@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}
<link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/attendmanager.css">
<div id="attendanceSection" class="dashboard-card bg-white p-4">
    <h5 class="mb-4 text-primary"><i class="fas fa-fingerprint me-2"></i> Chấm công</h5>

    <!-- Bộ lọc -->
    <div class="row mb-3">
        <div class="col-md-4">
            <label class="form-label">Chọn phòng ban</label>
            <select class="form-control" id="departmentFilter">
                <option value="">Tất cả</option>
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Chọn chức vụ</label>
            <select class="form-control" id="positionFilter">
                <option value="">Tất cả</option>
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Chọn nhân viên</label>
            <select class="form-control" id="employeeFilter">
                <option value="">Chọn nhân viên</option>
            </select>
        </div>
    </div>

    <!-- Bảng chấm công -->
    <table class="table mt-3">
        <thead>
            <tr>
                <th>Ngày làm việc</th>
                <th>Giờ vào</th>
                <th>Giờ ra</th>
                <th>Tổng giờ</th>
                <th>Trạng thái</th>
                <th>Ghi chú</th>
                <th>Duyệt</th>
            </tr>
        </thead>
        <tbody id="attendanceTableBody"></tbody>
    </table>
</div>

@* <div id="salarySection" class="dashboard-card bg-white p-4 mt-4">
    <h5 class="mb-4 text-primary"><i class="fas fa-money-check-alt me-2"></i> Bảng Lương</h5>

    <table class="table mt-3">
        <thead>
            <tr>
                <th>Tháng Năm</th>
                <th>Lương Tăng Ca</th>
                <th>Thuế TNCN</th>
                <th>Tổng Lương</th>
                <th>Thực Nhận</th>
                <th>Trạng Thái</th>
                <th>Ghi Chú</th>
            </tr>
        </thead>
        <tbody id="salaryTableBody"></tbody>
    </table>
</div>
 *@


<div id="overtimeSection" class="dashboard-card bg-white p-4 mt-4">
    <h5 class="mb-4 text-primary"><i class="fas fa-clock me-2"></i> Bảng Tăng Ca</h5>

    <table class="table mt-3">
        <thead>
            <tr>
                <th>Ngày tăng ca</th>
                <th>Số giờ tăng ca</th>
                <th>Tỉ lệ tăng ca</th>
                <th>Trạng thái</th>
                <th>Duyệt</th>
            </tr>
        </thead>
        <tbody id="overtimeTableBody"></tbody>
    </table>
</div>

<!-- Modal for rejection comment -->
<div class="modal fade" id="rejectionModal" tabindex="-1" aria-labelledby="rejectionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectionModalLabel">Nhập lý do từ chối</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="rejectionComment" class="form-label">Ghi chú:</label>
                    <textarea class="form-control" id="rejectionComment" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="submitRejection()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for overtime rejection comment -->
<div class="modal fade" id="overtimeRejectionModal" tabindex="-1" aria-labelledby="overtimeRejectionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="overtimeRejectionModalLabel">Nhập lý do từ chối tăng ca</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="overtimeRejectionComment" class="form-label">Ghi chú:</label>
                    <textarea class="form-control" id="overtimeRejectionComment" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="submitOvertimeRejection()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<script>
    
document.addEventListener("DOMContentLoaded", function () {
    loadDepartments();
    loadPositions();
    loadEmployees(); // Load toàn bộ nhân viên ban đầu

    document.getElementById("departmentFilter").addEventListener("change", loadEmployees);
    document.getElementById("positionFilter").addEventListener("change", loadEmployees);
    document.getElementById("employeeFilter").addEventListener("change", function () {
        const maNv = this.value;
        if (maNv) {
            fetchAttendanceRecords(maNv);
            fetchOvertimeRecords(maNv);
            fetchSalaryRecords(maNv);
        } else {
            clearTables();
        }
    });
});

// Xóa bảng khi chưa có nhân viên được chọn
function clearTables() {
    document.getElementById("attendanceTableBody").innerHTML = '';
    document.getElementById("overtimeTableBody").innerHTML = '';
    document.getElementById("salaryTableBody").innerHTML = '';
}

// Load bộ lọc
function loadDepartments() {
    fetch("/api/AttendanceManager/GetDepartmentsManager")
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("departmentFilter");
            select.innerHTML = '<option value="">Tất cả</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maPhongBan}">${d.tenPhongBan}</option>`);
        });
}

function loadPositions() {
    fetch("/api/AttendanceManager/GetPositionsManager")
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("positionFilter");
            select.innerHTML = '<option value="">Tất cả</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maChucVu}">${d.tenChucVu}</option>`);
        });
}

function loadEmployees() {
    const pb = document.getElementById("departmentFilter").value;
    const cv = document.getElementById("positionFilter").value;

    fetch(`/api/AttendanceManager/GetEmployeesManager?maPhongBan=${pb}&maChucVu=${cv}`)
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("employeeFilter");
            select.innerHTML = '<option value="">Chọn nhân viên</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maNv}">${d.hoTen}</option>`);

            // Nếu có nhân viên thì tự động load dữ liệu cho nhân viên đầu tiên
            if (data.length > 0) {
                select.value = data[0].maNv;
                fetchAttendanceRecords(data[0].maNv);
                fetchOvertimeRecords(data[0].maNv);
                fetchSalaryRecords(data[0].maNv);
            } else {
                clearTables();
            }
        });
}

// Bảng chấm công
function fetchAttendanceRecords(maNv) {
    fetch(`/api/AttendanceManager/GetAttendanceManagerRecords?maNv=${maNv}`)
        .then(res => res.json())
        .then(data => {
            if (data.success) renderAttendanceTable(data.records);
        });
}

function renderAttendanceTable(records) {
    const body = document.getElementById("attendanceTableBody");
    body.innerHTML = records.map(r => `
        <tr>
            <td>${r.ngay}</td>
            <td>${r.gioVao || "-"}</td>
            <td>${r.gioRa || "-"}</td>
            <td>${r.tongGio}</td>
            <td class="${getStatusClass(r.trangThai)}">${r.trangThai}</td>
            <td>${r.ghiChu || "-"}</td>
            <td>
                <button class="btn btn-success btn-sm me-1" onclick="approveAttendance(${r.maLichSuChamCong}, 'Đã duyệt')">✔</button>
                <button class="btn btn-danger btn-sm" onclick="approveAttendance(${r.maLichSuChamCong}, 'Từ chối')">✖</button>
            </td>
        </tr>
    `).join("");
}



// Bảng lương
function fetchSalaryRecords(maNv) {
    fetch(`/api/AttendanceManager/GetEmployeeSalaries?maNv=${maNv}`)
        .then(res => res.json())
        .then(data => {
            if (data.success) renderSalaryTable(data.records);
        });
}

function renderSalaryTable(records) {
    const body = document.getElementById("salaryTableBody");
    body.innerHTML = records.map(r => `
        <tr>
            <td>${r.thangNam}</td>
            <td>${r.luongTangCa.toLocaleString()}</td>
            <td>${r.thueTNCN.toLocaleString()}</td>
            <td>${r.tongLuong.toLocaleString()}</td>
            <td>${r.thucNhan.toLocaleString()}</td>
            <td>${r.trangThai}</td>
            <td>${r.ghiChu || "-"}</td>
        </tr>
    `).join("");
}
</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    loadDepartments();
    loadPositions();
    loadEmployees(); // Load toàn bộ nhân viên ban đầu

    document.getElementById("departmentFilter").addEventListener("change", loadEmployees);
    document.getElementById("positionFilter").addEventListener("change", loadEmployees);
    document.getElementById("employeeFilter").addEventListener("change", function () {
        const maNv = this.value;
        if (maNv) {
            fetchAttendanceRecords(maNv);
            fetchSalaryRecords(maNv);
        } else {
            clearTables();
        }
    });
});

// Xóa bảng khi chưa có nhân viên được chọn
function clearTables() {
    document.getElementById("attendanceTableBody").innerHTML = '';
    document.getElementById("salaryTableBody").innerHTML = '';
}

// Load bộ lọc
function loadDepartments() {
    fetch("/api/AttendanceManager/GetDepartmentsManager")
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("departmentFilter");
            select.innerHTML = '<option value="">Tất cả</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maPhongBan}">${d.tenPhongBan}</option>`);
        });
}

function loadPositions() {
    fetch("/api/AttendanceManager/GetPositionsManager")
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("positionFilter");
            select.innerHTML = '<option value="">Tất cả</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maChucVu}">${d.tenChucVu}</option>`);
        });
}

function loadEmployees() {
    const pb = document.getElementById("departmentFilter").value;
    const cv = document.getElementById("positionFilter").value;

    fetch(`/api/AttendanceManager/GetEmployeesManager?maPhongBan=${pb}&maChucVu=${cv}`)
        .then(res => res.json())
        .then(data => {
            const select = document.getElementById("employeeFilter");
            select.innerHTML = '<option value="">Chọn nhân viên</option>';
            data.forEach(d => select.innerHTML += `<option value="${d.maNv}">${d.hoTen}</option>`);

            // Nếu có nhân viên thì tự động load dữ liệu cho nhân viên đầu tiên
            if (data.length > 0) {
                select.value = data[0].maNv;
                fetchAttendanceRecords(data[0].maNv);
                fetchSalaryRecords(data[0].maNv);
            } else {
                clearTables();
            }
        });
}

// Bảng chấm công
function fetchAttendanceRecords(maNv) {
    fetch(`/api/AttendanceManager/GetAttendanceManagerRecords?maNv=${maNv}`)
        .then(res => res.json())
        .then(data => {
            if (data.success) renderAttendanceTable(data.records);
        });
}

function renderAttendanceTable(records) {
    const body = document.getElementById("attendanceTableBody");
    body.innerHTML = records.map(r => `
        <tr>
            <td>${r.ngay}</td>
            <td>${r.gioVao || "-"}</td>
            <td>${r.gioRa || "-"}</td>
            <td>${r.tongGio}</td>
            <td class="${getStatusClass(r.trangThai)}">${r.trangThai}</td>
            <td>${r.ghiChu || "-"}</td>
            <td>
                <button class="btn btn-success btn-sm me-1" onclick="approveAttendance(${r.maLichSuChamCong}, 'Đã duyệt')">✔</button>
                <button class="btn btn-danger btn-sm" onclick="approveAttendance(${r.maLichSuChamCong}, 'Từ chối')">✖</button>
            </td>
        </tr>
    `).join("");
}

function getStatusClass(status) {
    return status === "Đã duyệt" ? "text-success" : status === "Từ chối" ? "text-danger" : "text-warning";
}

let currentRejectionId = null;

function approveAttendance(maLichSuChamCong, trangThai) {
    if (trangThai === "Từ chối") {
        currentRejectionId = maLichSuChamCong;
        $('#rejectionModal').modal('show');
    } else {
        submitApproval(maLichSuChamCong, trangThai, "");
    }
}

function submitRejection() {
    const comment = document.getElementById('rejectionComment').value;
    if (currentRejectionId) {
        submitApproval(currentRejectionId, "Từ chối", comment);
        $('#rejectionModal').modal('hide');
        document.getElementById('rejectionComment').value = '';
        currentRejectionId = null;
    }
}

function submitApproval(maLichSuChamCong, trangThai, ghiChu) {
    // Bước 1: Gọi API duyệt chấm công trước
    fetch("/api/AttendanceManager/ApproveAttendanceManager", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ 
            maChamCong: maLichSuChamCong, 
            trangThai: trangThai,
            ghiChu: ghiChu
        })
    })
    .then(res => res.json())
    .then(data => {
        // Hiển thị thông báo kết quả duyệt
        alert(data.message);

        if (data.success) {
            // Nếu duyệt thành công và trạng thái là "Đã duyệt", mới gọi cập nhật bảng lương
            if (trangThai === "Đã duyệt") {
                fetch("/api/AttendanceManager/ApproveAttendanceAndUpdateSalary", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ 
                        maChamCong: maLichSuChamCong, 
                        trangThai: trangThai,
                        ghiChu: ghiChu
                    })
                })
                .then(res => res.json())
                .then(salaryData => {
                    alert(salaryData.message);

                    const selected = document.getElementById("employeeFilter").value;
                    if (selected) {
                        fetchAttendanceRecords(selected);
                        fetchSalaryRecords(selected); // Cập nhật bảng lương
                    }
                });
            } else {
                const selected = document.getElementById("employeeFilter").value;
                if (selected) {
                    fetchAttendanceRecords(selected); // Chỉ cập nhật lại chấm công nếu là từ chối
                }
            }
        }
    });
}


// // Bảng lương
// function fetchSalaryRecords(maNv) {
//     fetch(`/api/AttendanceManager/GetEmployeeSalaries?maNv=${maNv}`)
//         .then(res => res.json())
//         .then(data => {
//             if (data.success) renderSalaryTable(data.records);
//         });
// }

// function renderSalaryTable(records) {
//     const body = document.getElementById("salaryTableBody");
//     body.innerHTML = records.map(r => `
//         <tr>
//             <td>${r.thangNam}</td>
//             <td>${r.luongTangCa.toLocaleString()}</td>
//             <td>${r.thueTNCN.toLocaleString()}</td>
//             <td>${r.tongLuong.toLocaleString()}</td>
//             <td>${r.thucNhan.toLocaleString()}</td>
//             <td>${r.trangThai}</td>
//             <td>${r.ghiChu || "-"}</td>
//         </tr>
//     `).join("");
// }
// lấy thông tin bảng tăng ca
    function fetchOvertimeRecords(maNv) {
        fetch(`/api/AttendanceManager/GetOvertimeRecords?maNv=${maNv}`)
            .then(res => res.json())
            .then(data => {
                if (data.success) renderOvertimeTable(data.records);
            });
    }
    function renderOvertimeTable(records) {
        const body = document.getElementById("overtimeTableBody");
        body.innerHTML = records.map(r => `
            <tr>
                <td>${r.ngayTangCa}</td>
                <td>${r.soGioTangCa || "-"}</td>
                <td>${r.tyLeTangCa || "-"}</td>
                <td class="${getStatusClass(r.trangThai)}">${r.trangThai}</td>

                <td>
                    <button class="btn btn-success btn-sm me-1" onclick="approveOvertime(${r.maTangCa}, 'Đã duyệt')">✔</button>
                    <button class="btn btn-danger btn-sm" onclick="cancelOvertime(${r.maTangCa}, 'Từ chối')">✖</button>
                </td>
            </tr>
        `).join("");
    }

let currentOvertimeRejectionId = null;

function approveOvertime(maTangCa, trangThai) {
    if (trangThai === "Từ chối") {
        currentOvertimeRejectionId = maTangCa;
        $('#overtimeRejectionModal').modal('show');
    } else {
        submitOvertimeApproval(maTangCa, trangThai, "");
    }
}

function submitOvertimeRejection() {
    const comment = document.getElementById('overtimeRejectionComment').value;
    if (currentOvertimeRejectionId) {
        submitOvertimeApproval(currentOvertimeRejectionId, "Từ chối", comment);
        $('#overtimeRejectionModal').modal('hide');
        document.getElementById('overtimeRejectionComment').value = '';
        currentOvertimeRejectionId = null;
    }
}

function submitOvertimeApproval(maTangCa, trangThai, ghiChu) {
    fetch("/api/AttendanceManager/ApproveOvertime", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ 
            maChamCong: maTangCa, 
            trangThai: trangThai,
            ghiChu: ghiChu
        })
    })
    .then(res => res.json())
    .then(data => {
        alert(data.message);
        if (data.success) {
            const selected = document.getElementById("employeeFilter").value;
            if (selected) {
                fetchOvertimeRecords(selected);
            }
        }
    });
}

function cancelOvertime(maTangCa) {
    currentOvertimeRejectionId = maTangCa;
    $('#overtimeRejectionModal').modal('show');
}

</script>

