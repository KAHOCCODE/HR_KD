```cshtml
@{
    ViewData["Title"] = "Work Time Settings";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css">

<div class="min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
        <div class="bg-white shadow-lg rounded-xl overflow-hidden">
            <!-- Header -->
            <div class="bg-gradient-to-r from-blue-700 to-indigo-700 px-6 py-4">
                <h2 class="text-2xl font-semibold text-white text-center">
                    <i class="fas fa-cogs mr-2"></i>
                    Quản Lý Cài Đặt Chấm Công
                </h2>
            </div>

            <!-- Tab Navigation -->
            <div class="border-b border-gray-200 bg-gray-50">
                <div class="flex flex-wrap justify-center sm:justify-start">
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 active" onclick="openTab(event, 'ChamCongGioRaVao')">
                        Chấm Công Giờ Ra Vào
                    </button> 
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'TangCaTiLe')">
                        Tăng Ca Tỉ Lệ
                    </button>
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'LichLamViecVaGioChuan')">
                        Lịch Làm Việc và Giờ Chuẩn
                    </button>
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'NgayLeCoDinh')">
                        Ngày Lễ Cố Định
                    </button>
                </div>
            </div>

            <!-- Tab Content -->
            <div id="ChamCongGioRaVao" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Chấm Công Giờ Ra Vào</h3>
                </div>
                <!-- Form for Adding/Updating Attendance Times -->
                <form id="chamCongGioRaVaoForm" class="space-y-4 mb-8">
                    <div class="flex flex-col sm:flex-row sm:space-x-4">
                        <div class="flex-1">
                            <label for="thoiGianVao" class="block text-sm font-medium text-gray-700">Thời Gian Vào:</label>
                            <input type="time" id="thoiGianVao" name="thoiGianVao" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                        </div>
                        <div class="flex-1">
                            <label for="thoiGianRa" class="block text-sm font-medium text-gray-700">Thời Gian Ra:</label>
                            <input type="time" id="thoiGianRa" name="thoiGianRa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                        </div>
                    </div>
                    <p id="workHoursInfo" class="text-sm text-gray-600 mt-2"></p>
                    <button type="submit" class="inline-flex items-center px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">
                        <i class="fas fa-save mr-1"></i>Lưu
                    </button>
                </form>
                <!-- Attendance Records Table -->
                <div class="overflow-x-auto">
                    <table id="chamCongGioRaVaoTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Giờ Vào</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Giờ Ra</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tổng Giờ</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Trạng Thái</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="TangCaTiLe" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Tăng Ca Tỉ Lệ</h3>
                    <button class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm" onclick="openCreateTangCaTiLeModal()">
                        <i class="fas fa-plus mr-1"></i>Tạo Mới
                    </button>
                </div>
                <div class="overflow-x-auto">
                    <table id="tangCaTiLeTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tên</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tỉ Lệ Tăng Ca (%)</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Trạng Thái</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="LichLamViecVaGioChuan" class="tabcontent p-4 sm:p-6 hidden">
                <!-- Weekly Work Schedule Section -->
                <div class="mb-8">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Lịch Làm Việc Tuần</h3>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - T6</h4>
                            <button onclick="activateSchedule('T2 - T6')" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" id="schedule-2">Đang tải...</button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - Nửa T7</h4>
                            <button onclick="activateSchedule('T2 - Nửa T7')" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" id="schedule-3">Đang tải...</button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - T7</h4>
                            <button onclick="activateSchedule('T2 - T7')" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" id="schedule-4">Đang tải...</button>
                        </div>
                    </div>
                </div>
                <!-- Monthly Standard Hours Section -->
                <div>
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold text-gray-800">Giờ Chuẩn Theo Tháng</h3>
                        <div class="flex items-center space-x-4">
                            <div>
                                <label for="selectYear" class="block text-sm font-medium text-gray-700">Chọn Năm:</label>
                                @{
                                    var currentYear = DateTime.Now.Year;
                                    var startYear = currentYear - 5;
                                    var endYear = currentYear + 5;
                                }
                                <select id="selectYear" class="w-full sm:w-40 px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm">
                                    @for (var year = startYear; year <= endYear; year++)
                                    {
                                        if (year == currentYear)
                                        {
                                                                    <option value="@year" selected>@year</option>
                                        }
                                        else
                                        {
                                                                    <option value="@year">@year</option>
                                        }
                                    }
                                </select>
                            </div>
                            <button id="generateSchedule" class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">
                                <i class="fas fa-calendar-alt mr-1"></i>Tạo Lịch
                            </button>
                            <button id="saveSchedule" class="inline-flex items-center px-3 py-1.5 rounded-lg bg-green-600 text-white hover:bg-green-700 transition-colors text-sm">
                                <i class="fas fa-save mr-1"></i>Lưu
                            </button>
                        </div>
                    </div>
                    <div class="overflow-x-auto">
                        <table id="workHoursTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 1</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 2</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 3</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 4</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 5</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 6</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 7</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 8</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 9</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 10</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 11</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 12</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="workHoursRow"></tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- New Tab: Ngày Lễ Cố Định -->
            <div id="NgayLeCoDinh" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Ngày Lễ Cố Định</h3>
                    <button class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm" onclick="openCreateNgayLeModal()">
                        <i class="fas fa-plus mr-1"></i>Tạo Mới
                    </button>
                </div>
                <div class="overflow-x-auto">
                    <table id="ngayLeCoDinhTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tên Ngày Lễ</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Ngày Lễ</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Số Ngày Nghỉ</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Mô Tả</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Create Modal for Tăng Ca Tỉ Lệ -->
<div id="createTangCaTiLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Tạo Mới Tăng Ca Tỉ Lệ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('createTangCaTiLeModal')">×</span>
        </div>
        <form id="createTangCaTiLeForm" class="space-y-4">
            <div>
                <label for="createTangCaName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="createTangCaName" name="tenTiLeTangCa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="createTangCa" class="block text-sm font-medium text-gray-700">Tỉ Lệ Tăng Ca (%):</label>
                <input type="number" step="0.01" id="createTangCa" name="tiLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Tạo</button>
        </form>
    </div>
</div>

<!-- Edit Modal for Tăng Ca Tỉ Lệ -->
<div id="editTangCaTiLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Chỉnh Sửa Tăng Ca Tỉ Lệ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('editTangCaTiLeModal')">×</span>
        </div>
        <form id="editTangCaTiLeForm" class="space-y-4">
            <input type="hidden" id="editTangCaTiLeId" name="id">
            <div>
                <label for="editTangCaName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="editTangCaName" name="tenTiLeTangCa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="editTangCa" class="block text-sm font-medium text-gray-700">Tỉ Lệ Tăng Ca (%):</label>
                <input type="number" step="0.01" id="editTangCa" name="tiLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Lưu</button>
        </form>
    </div>
</div>

<!-- Create Modal for Ngày Lễ Cố Định -->
<div id="createNgayLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Tạo Mới Ngày Lễ Cố Định</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('createNgayLeModal')">×</span>
        </div>
        <form id="createNgayLeForm" class="space-y-4">
            <div>
                <label for="createTenNgayLe" class="block text-sm font-medium text-gray-700">Tên Ngày Lễ:</label>
                <input type="text" id="createTenNgayLe" name="tenNgayLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="createNgayLe" class="block text-sm font-medium text-gray-700">Ngày Lễ:</label>
                <input type="date" id="createNgayLe" name="ngayLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:rowspan="4">
                <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Tạo</button>
            </form>
        </div>
    </div>

    <!-- Edit Modal for Ngày Lễ Cố Định -->
    <div id="editNgayLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
        <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-lg font-semibold text-gray-800">Chỉnh Sửa Ngày Lễ Cố Định</h2>
                <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('editNgayLeModal')">×</span>
            </div>
            <form id="editNgayLeForm" class="space-y-4">
                <input type="hidden" id="editNgayLeId" name="maNgayLe">
                <div>
                    <label for="editTenNgayLe" class="block text-sm font-medium text-gray-700">Tên Ngày Lễ:</label>
                    <input type="text" id="editTenNgayLe" name="tenNgayLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                </div>
                <div>
                    <label for="editNgayLe" class="block text-sm font-medium text-gray-700">Ngày Lễ:</label>
                    <input type="date" id="editNgayLe" name="ngayLe" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                </div>
                <div>
                    <label for="editSoNgayNghi" class="block text-sm font-medium text-gray-700">Số Ngày Nghỉ:</label>
                    <input type="number" id="editSoNgayNghi" name="soNgayNghi" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" min="1">
                </div>
                <div>
                    <label for="editMoTa" class="block text-sm font-medium text-gray-700">Mô Tả:</label>
                    <textarea id="editMoTa" name="moTa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" rows="4"></textarea>
                </div>
                <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Lưu</button>
            </form>
        </div>
    </div>

@section Scripts {
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
                    <script>
                        let schedules = [];
                        let workHoursData = Array(12).fill(0); // To store calculated work hours for saving

                        // Tab Management
                        function openTab(evt, tabName) {
                            $(".tabcontent").addClass("hidden");
                            $(".tablinks").removeClass("active");
                            $("#" + tabName).removeClass("hidden");
                            evt.currentTarget.className += " active";
                            loadData(tabName);
                        }

                        // Modal Management
                        function closeModal(modalId) {
                            $("#" + modalId).addClass("hidden");
                        }

                        function showModal(modalId) {
                            $("#" + modalId).removeClass("hidden");
                        }

                        // Load Schedule Buttons
                        function loadScheduleButtons() {
                            $.ajax({
                                url: "/api/AttendanceSettingApi/GetLichLamViec",
                                method: "GET",
                                success: function (data) {
                                    schedules = data;
                                    updateToggleButtons();
                                },
                                error: function (xhr) {
                                    console.error("Error loading schedules:", xhr);
                                    Swal.fire("Lỗi!", "Không thể tải lịch làm việc.", "error");
                                    updateToggleButtons([]);
                                }
                            });
                        }

                        function updateToggleButtons() {
                            const buttons = [
                                { tenLich: "T2 - T6", element: $("#schedule-2") },
                                { tenLich: "T2 - Nửa T7", element: $("#schedule-3") },
                                { tenLich: "T2 - T7", element: $("#schedule-4") }
                            ];

                            buttons.forEach(btn => {
                                const schedule = schedules.find(s => s.tenLich === btn.tenLich);
                                const isActive = schedule ? schedule.kichHoat : false;
                                btn.element.text(isActive ? "Đã Kích Hoạt" : "Kích Hoạt")
                                    .toggleClass("bg-green-500 hover:bg-green-600", isActive)
                                    .toggleClass("bg-blue-600 hover:bg-blue-700", !isActive)
                                    .prop("disabled", isActive);
                            });
                        }

                        function activateSchedule(scheduleName) {
                            $.ajax({
                                url: `/api/AttendanceSettingApi/ActivateLichLamViec/${encodeURIComponent(scheduleName)}`,
                                method: "POST",
                                success: function (data) {
                                    schedules = data;
                                    updateToggleButtons();
                                    Swal.fire("Thành công!", "Đã kích hoạt lịch làm việc.", "success");
                                    loadGioChuan();
                                },
                                error: function (xhr) {
                                    console.error("Error activating schedule:", xhr);
                                    Swal.fire("Lỗi!", "Không thể kích hoạt lịch làm việc.", "error");
                                }
                            });
                        }

                        // Load Data for Tables
                        function loadData(tabName) {
                            var apiUrl = "";
                            var tableId = "";
                            var html = "";

                            switch (tabName) {
                                case "ChamCongGioRaVao":
                                    // Load form data (latest record) and table data
                                    $.ajax({
                                        url: "/api/AttendanceSettingApi/GetChamCongGioRaVao",
                                        method: "GET",
                                        success: function (data) {
                                            if (data && data.length > 0) {
                                                var latestRecord = data.sort((a, b) => b.id - a.id)[0];
                                                $("#thoiGianVao").val(latestRecord.gioVao ? latestRecord.gioVao.slice(0, 5) : "");
                                                $("#thoiGianRa").val(latestRecord.gioRa ? latestRecord.gioRa.slice(0, 5) : "");
                                                updateWorkHoursInfo();
                                            }
                                            // Load table data
                                            tableId = "#chamCongGioRaVaoTable tbody";
                                            $(tableId).empty();
                                            if (data && data.length > 0) {
                                                data.forEach(function(item) {
                                                    html += `<tr class="hover:bg-gray-50">
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.gioVao ? item.gioVao.slice(0, 5) : 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.gioRa ? item.gioRa.slice(0, 5) : 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.tongGio.toFixed(1)}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">
                                                            <span class="px-2 py-1 rounded-full text-xs ${item.kichHoat ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}">
                                                                ${item.kichHoat ? 'Đã Kích Hoạt' : 'Chưa Kích Hoạt'}
                                                            </span>
                                                        </td>
                                                        <td class="px-4 py-2 text-sm border-b">
                                                            <button class="inline-flex items-center px-2 py-1 rounded-lg ${item.kichHoat ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white transition-colors text-xs" onclick="activateChamCongGioRaVao(${item.id})">
                                                                <i class="fas ${item.kichHoat ? 'fa-times' : 'fa-check'} mr-1"></i>${item.kichHoat ? 'Hủy Kích Hoạt' : 'Kích Hoạt'}
                                                            </button>
                                                        </td>
                                                    </tr>`;
                                                });
                                            }
                                            $(tableId).html(html || "<tr><td colspan='5' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Không có dữ liệu</td></tr>");
                                        },
                                        error: function (xhr) {
                                            console.error("Error loading data for ChamCongGioRaVao:", xhr);
                                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                                            $("#chamCongGioRaVaoTable tbody").html("<tr><td colspan='5' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Lỗi tải dữ liệu</td></tr>");
                                        }
                                    });
                                    break;

                                case "TangCaTiLe":
                                    apiUrl = "/api/AttendanceSettingApi/GetTiLeTangCa";
                                    tableId = "#tangCaTiLeTable tbody";
                                    $.ajax({
                                        url: apiUrl,
                                        method: "GET",
                                        success: function (data) {
                                            $(tableId).empty();
                                            if (data && data.length > 0) {
                                                data.forEach(function(item) {
                                                    html += `<tr class="hover:bg-gray-50">
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.tenTiLeTangCa || 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.tiLe.toFixed(2)}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">
                                                            <span class="px-2 py-1 rounded-full text-xs ${item.kichHoat ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}">
                                                                ${item.kichHoat ? 'Đã Kích Hoạt' : 'Chưa Kích Hoạt'}
                                                            </span>
                                                        </td>
                                                        <td class="px-4 py-2 text-sm border-b">
                                                            <button class="inline-flex items-center px-2 py-1 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition-colors text-xs mr-2" onclick="openEditTangCaTiLeModal(${item.id})">
                                                                <i class="fas fa-edit mr-1"></i>Sửa
                                                            </button>
                                                            <button class="inline-flex items-center px-2 py-1 rounded-lg ${item.kichHoat ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white transition-colors text-xs" onclick="activateTiLeTangCa(${item.id})">
                                                                <i class="fas ${item.kichHoat ? 'fa-times' : 'fa-check'} mr-1"></i>${item.kichHoat ? 'Hủy Kích Hoạt' : 'Kích Hoạt'}
                                                            </button>
                                                        </td>
                                                    </tr>`;
                                                });
                                            }
                                            $(tableId).html(html || "<tr><td colspan='4' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Không có dữ liệu</td></tr>");
                                        },
                                        error: function (xhr) {
                                            console.error("Error loading data for TangCaTiLe:", xhr);
                                            $(tableId).html("<tr><td colspan='4' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Lỗi tải dữ liệu</td></tr>");
                                        }
                                    });
                                    break;

                                case "LichLamViecVaGioChuan":
                                    loadScheduleButtons();
                                    loadGioChuan();
                                    break;

                                case "NgayLeCoDinh":
                                    apiUrl = "/api/AttendanceSettingApi/GetNgayLeCoDinh";
                                    tableId = "#ngayLeCoDinhTable tbody";
                                    $.ajax({
                                        url: apiUrl,
                                        method: "GET",
                                        success: function (data) {
                                            $(tableId).empty();
                                            if (data && data.length > 0) {
                                                data.forEach(function(item) {
                                                    html += `<tr class="hover:bg-gray-50">
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.tenNgayLe || 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.ngayLe1 || 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.soNgayNghi || 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm text-gray-600 border-b">${item.moTa || 'N/A'}</td>
                                                        <td class="px-4 py-2 text-sm border-b">
                                                            <button class="inline-flex items-center px-2 py-1 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition-colors text-xs mr-2" onclick="openEditNgayLeModal(${item.maNgayLe})">
                                                                <i class="fas fa-edit mr-1"></i>Sửa
                                                            </button>
                                                            <button class="inline-flex items-center px-2 py-1 rounded-lg bg-red-500 text-white hover:bg-red-600 transition-colors text-xs" onclick="deleteNgayLe(${item.maNgayLe})">
                                                                <i class="fas fa-trash mr-1"></i>Xóa
                                                            </button>
                                                        </td>
                                                    </tr>`;
                                                });
                                            }
                                            $(tableId).html(html || "<tr><td colspan='5' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Không có dữ liệu</td></tr>");
                                        },
                                        error: function (xhr) {
                                            console.error("Error loading data for NgayLeCoDinh:", xhr);
                                            $(tableId).html("<tr><td colspan='5' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Lỗi tải dữ liệu</td></tr>");
                                        }
                                    });
                                    break;
                            }
                        }

                        // Load GioChuan Data
                        function loadGioChuan() {
                            var year = parseInt($("#selectYear").val());
                            $.ajax({
                                url: `/api/AttendanceSettingApi/GetGioChuan/${year}`,
                                method: "GET",
                                success: function (data) {
                                    if (data) {
                                        workHoursData = [
                                            data.thang1, data.thang2, data.thang3, data.thang4, data.thang5,
                                            data.thang6, data.thang7, data.thang8, data.thang9, data.thang10,
                                            data.thang11, data.thang12
                                        ];
                                        var rowHtml = workHoursData.map(hours => `<td class="px-4 py-2 text-sm text-gray-600 border-b text-center">${hours.toFixed(1)}</td>`).join("");
                                        $("#workHoursRow").html(rowHtml);
                                    } else {
                                        $("#workHoursRow").html(Array(12).fill('<td class="px-4 py-2 text-sm text-gray-600 border-b text-center">0.0</td>').join(""));
                                    }
                                },
                                error: function (xhr) {
                                    console.error("Error loading GioChuan:", xhr);
                                    $("#workHoursRow").html(Array(12).fill('<td class="px-4 py-2 text-sm text-gray-600 border-b text-center">0.0</td>').join(""));
                                }
                            });
                        }

                        // Calculate Standard Work Hours
                        function calculateWorkHours() {
                            var activeSchedule = schedules.find(s => s.kichHoat) || { tenLich: "T2 - T6" };
                            if (!activeSchedule) {
                                Swal.fire("Lỗi!", "Vui lòng kích hoạt một lịch làm việc trước khi tạo lịch.", "error");
                                return;
                            }

                            var year = parseInt($("#selectYear").val());
                            workHoursData = Array(12).fill(0);

                            for (var month = 0; month < 12; month++) {
                                var daysInMonth = new Date(year, month + 1, 0).getDate();
                                var sundayCount = 0;
                                var saturdayCount = 0;
                                var weekdayCount = 0;

                                for (var day = 1; day <= daysInMonth; day++) {
                                    var date = new Date(year, month, day);
                                    var dayOfWeek = date.getDay(); // 0: Sunday, 1: Monday, ..., 6: Saturday

                                    if (dayOfWeek === 0) {
                                        sundayCount++;
                                    } else if (dayOfWeek === 6) {
                                        saturdayCount++;
                                    } else {
                                        weekdayCount++;
                                    }
                                }

                                if (activeSchedule.tenLich === "T2 - T6") {
                                    var workingDays = weekdayCount;
                                    workHoursData[month] = workingDays * 8;
                                } else if (activeSchedule.tenLich === "T2 - Nửa T7") {
                                    workHoursData[month] = (weekdayCount * 8) + (saturdayCount * 4);
                                } else if (activeSchedule.tenLich === "T2 - T7") {
                                    var workingDays = weekdayCount + saturdayCount;
                                    workHoursData[month] = workingDays * 8;
                                }
                            }

                            var rowHtml = workHoursData.map(hours => `<td class="px-4 py-2 text-sm text-gray-600 border-b text-center">${hours.toFixed(1)}</td>`).join("");
                            $("#workHoursRow").html(rowHtml);
                            Swal.fire("Thành công!", "Đã tạo lịch giờ chuẩn.", "success");
                        }

                        // Save GioChuan
                        function saveGioChuan() {
                            var activeSchedule = schedules.find(s => s.kichHoat);
                            if (!activeSchedule) {
                                Swal.fire("Lỗi!", "Vui lòng kích hoạt một lịch làm việc trước khi lưu.", "error");
                                return;
                            }

                            var year = parseInt($("#selectYear").val());
                            var data = {
                                thang1: Math.round(workHoursData[0]),
                                thang2: Math.round(workHoursData[1]),
                                thang3: Math.round(workHoursData[2]),
                                thang4: Math.round(workHoursData[3]),
                                thang5: Math.round(workHoursData[4]),
                                thang6: Math.round(workHoursData[5]),
                                thang7: Math.round(workHoursData[6]),
                                thang8: Math.round(workHoursData[7]),
                                thang9: Math.round(workHoursData[8]),
                                thang10: Math.round(workHoursData[9]),
                                thang11: Math.round(workHoursData[10]),
                                thang12: Math.round(workHoursData[11]),
                                nam: year,
                                idLichLamViec: activeSchedule.id,
                                kichHoat: true
                            };

                            $.ajax({
                                url: "/api/AttendanceSettingApi/SaveGioChuan",
                                method: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Đã lưu giờ chuẩn.", "success");
                                },
                                error: function (xhr) {
                                    console.error("Error saving GioChuan:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể lưu dữ liệu.", "error");
                                }
                            });
                        }

                        // Update Work Hours Info and Validate
                        function updateWorkHoursInfo() {
                            var startTime = $("#thoiGianVao").val();
                            var endTime = $("#thoiGianRa").val();
                            if (startTime && endTime) {
                                // Parse times to calculate hours
                                var startParts = startTime.split(":");
                                var endParts = endTime.split(":");
                                var startHours = parseInt(startParts[0]);
                                var startMinutes = parseInt(startParts[1]);
                                var endHours = parseInt(endParts[0]);
                                var endMinutes = parseInt(endParts[1]);

                                var startTotalMinutes = startHours * 60 + startMinutes;
                                var endTotalMinutes = endHours * 60 + endMinutes;

                                if (endTotalMinutes <= startTotalMinutes) {
                                    endTotalMinutes += 24 * 60; // Handle next day
                                }

                                var diffMinutes = endTotalMinutes - startTotalMinutes;
                                var diffHours = diffMinutes / 60;
                                var lunchBreak = 1; // 1-hour lunch break
                                var workingHours = diffHours - lunchBreak;

                                $("#workHoursInfo").text(`Tổng giờ làm: ${workingHours.toFixed(1)} giờ (bao gồm 1 giờ nghỉ trưa)`);
                                if (workingHours > 8 || workingHours < 0) {
                                    $("#workHoursInfo").addClass("text-red-500").removeClass("text-gray-600");
                                } else {
                                    $("#workHoursInfo").removeClass("text-red-500").addClass("text-gray-600");
                                }
                            } else {
                                $("#workHoursInfo").text("").removeClass("text-red-500 text-gray-600");
                            }
                        }

                        // Validate and Submit ChamCongGioRaVao Form
                        $("#chamCongGioRaVaoForm").submit(function (e) {
                            e.preventDefault();
                            var thoiGianVao = $("#thoiGianVao").val();
                            var thoiGianRa = $("#thoiGianRa").val();

                            // Parse times to calculate hours
                            var startParts = thoiGianVao.split(":");
                            var endParts = thoiGianRa.split(":");
                            var startHours = parseInt(startParts[0]);
                            var startMinutes = parseInt(startParts[1]);
                            var endHours = parseInt(endParts[0]);
                            var endMinutes = parseInt(endParts[1]);

                            var startTotalMinutes = startHours * 60 + startMinutes;
                            var endTotalMinutes = endHours * 60 + endMinutes;

                            if (endTotalMinutes <= startTotalMinutes) {
                                endTotalMinutes += 24 * 60; // Handle next day
                            }

                            var diffMinutes = endTotalMinutes - startTotalMinutes;
                            var diffHours = diffMinutes / 60;
                            var lunchBreak = 1; // 1-hour lunch break
                            var workingHours = diffHours - lunchBreak;

                            if (workingHours > 8) {
                                Swal.fire("Lỗi!", "Tổng giờ làm không được vượt quá 8 giờ (bao gồm 1 giờ nghỉ trưa). Vui lòng điều chỉnh giờ vào hoặc giờ ra.", "error");
                                return;
                            }
                            if (workingHours < 0) {
                                Swal.fire("Lỗi!", "Giờ làm không hợp lệ. Vui lòng kiểm tra lại giờ vào và giờ ra.", "error");
                                return;
                            }

                            var data = {
                                gioVao: `${thoiGianVao}:00`,
                                gioRa: `${thoiGianRa}:00`,
                                kichHoat: true,
                                tongGio: workingHours
                            };

                            $.ajax({
                                url: "/api/AttendanceSettingApi/SetChamCongGioRaVao",
                                method: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Cập nhật giờ ra vào thành công!", "success");
                                    loadData("ChamCongGioRaVao"); // Refresh table
                                    $("#chamCongGioRaVaoForm")[0].reset();
                                    $("#workHoursInfo").text("");
                                },
                                error: function (xhr) {
                                    console.error("Error saving ChamCongGioRaVao:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể lưu dữ liệu.", "error");
                                }
                            });
                        });

                        // Activate ChamCongGioRaVao
                        function activateChamCongGioRaVao(id) {
                            $.ajax({
                                url: `/api/AttendanceSettingApi/ActivateChamCongGioRaVao/${id}`,
                                method: "POST",
                                success: function () {
                                    Swal.fire("Thành công!", "Đã cập nhật trạng thái kích hoạt.", "success");
                                    loadData("ChamCongGioRaVao");
                                },
                                error: function (xhr) {
                                    console.error("Error activating ChamCongGioRaVao:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật trạng thái kích hoạt.", "error");
                                }
                            });
                        }

                        // Modal Handlers
                        function openCreateTangCaTiLeModal() {
                            $("#createTangCaTiLeForm")[0].reset();
                            showModal("createTangCaTiLeModal");
                        }

                        function openEditTangCaTiLeModal(id) {
                            $.ajax({
                                url: `/api/AttendanceSettingApi/GetTiLeTangCa/${id}`,
                                method: "GET",
                                success: function (data) {
                                    $("#editTangCaTiLeId").val(data.id);
                                    $("#editTangCaName").val(data.tenTiLeTangCa);
                                    $("#editTangCa").val(data.tiLe);
                                    showModal("editTangCaTiLeModal");
                                },
                                error: function (xhr) {
                                    console.error("Error fetching TangCaTiLe:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                                }
                            });
                        }

                        function openCreateNgayLeModal() {
                            $("#createNgayLeForm")[0].reset();
                            showModal("createNgayLeModal");
                        }

                        function openEditNgayLeModal(id) {
                            $.ajax({
                                url: `/api/AttendanceSettingApi/GetNgayLeCoDinh/${id}`,
                                method: "GET",
                                success: function (data) {
                                    $("#editNgayLeId").val(data.maNgayLe);
                                    $("#editTenNgayLe").val(data.tenNgayLe);
                                    $("#editNgayLe").val(data.ngayLe1);
                                    $("#editSoNgayNghi").val(data.soNgayNghi || '');
                                    $("#editMoTa").val(data.moTa || '');
                                    showModal("editNgayLeModal");
                                },
                                error: function (xhr) {
                                    console.error("Error fetching NgayLeCoDinh:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                                }
                            });
                        }

                        function deleteNgayLe(id) {
                            Swal.fire({
                                title: 'Xác nhận xóa',
                                text: "Bạn có chắc chắn muốn xóa ngày lễ này?",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#d33',
                                cancelButtonColor: '#3085d6',
                                confirmButtonText: 'Xóa',
                                cancelButtonText: 'Hủy'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    $.ajax({
                                        url: `/api/AttendanceSettingApi/DeleteNgayLeCoDinh/${id}`,
                                        method: "DELETE",
                                        success: function () {
                                            Swal.fire("Thành công!", "Đã xóa ngày lễ.", "success");
                                            loadData("NgayLeCoDinh");
                                        },
                                        error: function (xhr) {
                                            console.error("Error deleting NgayLeCoDinh:", xhr);
                                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể xóa dữ liệu.", "error");
                                        }
                                    });
                                }
                            });
                        }

                        // Generate Schedule
                        $("#generateSchedule").click(function () {
                            calculateWorkHours();
                        });

                        // Save Schedule
                        $("#saveSchedule").click(function () {
                            saveGioChuan();
                        });

                        // On Year Change, Load GioChuan
                        $("#selectYear").on("change", function () {
                            loadGioChuan();
                        });

                        // Real-time Validation on Input Change
                        $("#thoiGianVao, #thoiGianRa").on("change", function () {
                            updateWorkHoursInfo();
                        });

                        // Submit Create TangCaTiLe Form
                        $("#createTangCaTiLeForm").submit(function (e) {
                            e.preventDefault();
                            var data = {
                                tenTiLeTangCa: $("#createTangCaName").val(),
                                tiLe: parseFloat($("#createTangCa").val()),
                                kichHoat: false
                            };

                            $.ajax({
                                url: "/api/AttendanceSettingApi/CreateTiLeTangCa",
                                method: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Đã tạo tỉ lệ tăng ca.", "success");
                                    closeModal("createTangCaTiLeModal");
                                    loadData("TangCaTiLe");
                                },
                                error: function (xhr) {
                                    console.error("Error creating TangCaTiLe:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tạo dữ liệu.", "error");
                                }
                            });
                        });

                        // Submit Edit TangCaTiLe Form
                        $("#editTangCaTiLeForm").submit(function (e) {
                            e.preventDefault();
                            var data = {
                                id: parseInt($("#editTangCaTiLeId").val()),
                                tenTiLeTangCa: $("#editTangCaName").val(),
                                tiLe: parseFloat($("#editTangCa").val()),
                                kichHoat: false // Preserve current activation status or set as needed
                            };

                            $.ajax({
                                url: `/api/AttendanceSettingApi/UpdateTiLeTangCa/${data.id}`,
                                method: "PUT",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Đã cập nhật tỉ lệ tăng ca.", "success");
                                    closeModal("editTangCaTiLeModal");
                                    loadData("TangCaTiLe");
                                },
                                error: function (xhr) {
                                    console.error("Error updating TangCaTiLe:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật dữ liệu.", "error");
                                }
                            });
                        });

                        // Submit Create NgayLe Form
                        $("#createNgayLeForm").submit(function (e) {
                            e.preventDefault();
                            var data = {
                                tenNgayLe: $("#createTenNgayLe").val(),
                                ngayLe1: $("#createNgayLe").val(),
                                soNgayNghi: $("#createSoNgayNghi").val() ? parseInt($("#createSoNgayNghi").val()) : null,
                                moTa: $("#createMoTa").val() || null
                            };

                            $.ajax({
                                url: "/api/AttendanceSettingApi/CreateNgayLeCoDinh",
                                method: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Đã tạo ngày lễ.", "success");
                                    closeModal("createNgayLeModal");
                                    loadData("NgayLeCoDinh");
                                },
                                error: function (xhr) {
                                    console.error("Error creating NgayLeCoDinh:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tạo dữ liệu.", "error");
                                }
                            });
                        });

                        // Submit Edit NgayLe Form
                        $("#editNgayLeForm").submit(function (e) {
                            e.preventDefault();
                            var data = {
                                maNgayLe: parseInt($("#editNgayLeId").val()),
                                tenNgayLe: $("#editTenNgayLe").val(),
                                ngayLe1: $("#editNgayLe").val(),
                                soNgayNghi: $("#editSoNgayNghi").val() ? parseInt($("#editSoNgayNghi").val()) : null,
                                moTa: $("#editMoTa").val() || null
                            };

                            $.ajax({
                                url: `/api/AttendanceSettingApi/UpdateNgayLeCoDinh/${data.maNgayLe}`,
                                method: "PUT",
                                contentType: "application/json",
                                data: JSON.stringify(data),
                                success: function () {
                                    Swal.fire("Thành công!", "Đã cập nhật ngày lễ.", "success");
                                    closeModal("editNgayLeModal");
                                    loadData("NgayLeCoDinh");
                                },
                                error: function (xhr) {
                                    console.error("Error updating NgayLeCoDinh:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật dữ liệu.", "error");
                                }
                            });
                        });

                        // Activate TiLeTangCa
                        function activateTiLeTangCa(id) {
                            $.ajax({
                                url: `/api/AttendanceSettingApi/ActivateTiLeTangCa/${id}`,
                                method: "POST",
                                success: function () {
                                    Swal.fire("Thành công!", "Đã cập nhật trạng thái kích hoạt.", "success");
                                    loadData("TangCaTiLe");
                                },
                                error: function (xhr) {
                                    console.error("Error toggling TiLeTangCa:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật trạng thái kích hoạt.", "error");
                                }
                            });
                        }

                        // Initialization
                        $(document).ready(function () {
                            $(".tablinks").first().click();
                            loadScheduleButtons();
                        });
                            $(document).ready(function () {
        // Set the first tab as active
        $(".tablinks").first().addClass("active");
        $("#ChamCongGioRaVao").removeClass("hidden");

        // Load data for all tabs
        loadData("ChamCongGioRaVao");
        loadData("TangCaTiLe");
        loadData("LichLamViecVaGioChuan");
        loadData("NgayLeCoDinh");
    });
                    </script>
}