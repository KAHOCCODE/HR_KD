@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css">

<div class="min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
        <div class="bg-white shadow-lg rounded-xl overflow-hidden">
            <!-- Header -->
            <div class="bg-gradient-to-r from-blue-700 to-indigo-700 px-6 py-4">
                <h2 class="text-2xl font-semibold text-white text-center">
                    <i class="fas fa-cogs mr-2"></i>
                    Quản Lý Cài Đặt Chấm Công
                </h2>
            </div>

            <!-- Tab Navigation -->
            <div class="border-b border-gray-200 bg-gray-50">
                <div class="flex flex-wrap justify-center sm:justify-start">
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 active" onclick="openTab(event, 'ChamCongGioRaVao')">
                        Chấm Công Giờ Ra Vào
                    </button>
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'TangCaTiLe')">
                        Tăng Ca Tỉ Lệ
                    </button>
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'BuGio')">
                        Bù Giờ
                    </button>
                    <button class="tablinks px-4 py-3 text-sm font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500" onclick="openTab(event, 'LichLamViecVaGioChuan')">
                        Lịch Làm Việc và Giờ Chuẩn
                    </button>
                </div>
            </div>

            <!-- Tab Content -->
            <div id="ChamCongGioRaVao" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Chấm Công Giờ Ra Vào</h3>
                </div>
                <form id="chamCongGioRaVaoForm" class="space-y-4">
                    <div class="flex flex-col sm:flex-row sm:space-x-4">
                        <div class="flex-1">
                            <label for="thoiGianVao" class="block text-sm font-medium text-gray-700">Thời Gian Vào:</label>
                            <input type="time" id="thoiGianVao" name="thoiGianVao" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                        </div>
                        <div class="flex-1">
                            <label for="thoiGianRa" class="block text-sm font-medium text-gray-700">Thời Gian Ra:</label>
                            <input type="time" id="thoiGianRa" name="thoiGianRa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
                        </div>
                    </div>
                    <button type="submit" class="inline-flex items-center px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">
                        <i class="fas fa-save mr-1"></i>Lưu
                    </button>
                </form>
            </div>

            <div id="TangCaTiLe" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Tăng Ca Tỉ Lệ</h3>
                    <button class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm" onclick="openCreateTangCaTiLeModal()">
                        <i class="fas fa-plus mr-1"></i>Tạo Mới
                    </button>
                </div>
                <div class="overflow-x-auto">
                    <table id="tangCaTiLeTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tên</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tỉ Lệ Tăng Ca (%)</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="BuGio" class="tabcontent p-4 sm:p-6 hidden">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Bù Giờ</h3>
                    <button class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm" onclick="openCreateBuGioModal()">
                        <i class="fas fa-plus mr-1"></i>Tạo Mới
                    </button>
                </div>
                <div class="overflow-x-auto">
                    <table id="buGioTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tên</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tỉ Lệ Bù Giờ (%)</th>
                                <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div id="LichLamViecVaGioChuan" class="tabcontent p-4 sm:p-6 hidden">
                <!-- Weekly Work Schedule Section -->
                <div class="mb-8">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Lịch Làm Việc Tuần</h3>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - T6</h4>
                            <button id="activate-T2-T6" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" onclick="activateSchedule('T2-T6')">
                                Kích Hoạt
                            </button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - Nửa T7</h4>
                            <button id="activate-T2-NuaT7" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" onclick="activateSchedule('T2-NuaT7')">
                                Kích Hoạt
                            </button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-4 shadow-sm">
                            <h4 class="text-sm font-medium text-gray-700 mb-2">T2 - T7</h4>
                            <button id="activate-T2-T7" class="toggle-btn w-full px-3 py-1.5 rounded-lg text-sm transition-colors" onclick="activateSchedule('T2-T7')">
                                Kích Hoạt
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Monthly Standard Hours Section -->
                <div>
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold text-gray-800">Giờ Chuẩn Theo Tháng</h3>
                        <div class="flex items-center space-x-4">
                            <div>
                                <label for="selectYear" class="block text-sm font-medium text-gray-700">Chọn Năm:</label>
                                <select id="selectYear" class="w-full sm:w-40 px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm">
                                    <!-- Populated dynamically -->
                                </select>
                            </div>
                            <button id="generateSchedule" class="inline-flex items-center px-3 py-1.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">
                                <i class="fas fa-calendar-alt mr-1"></i>Tạo Lịch
                            </button>
                        </div>
                    </div>
                    <div id="calendar" class="mb-4"></div>
                    <div class="overflow-x-auto">
                        <table id="workHoursTable" class="min-w-full bg-white border border-gray-200 rounded-lg">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 1</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 2</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 3</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 4</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 5</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 6</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 7</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 8</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 9</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 10</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 11</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-700 border-b">Tháng 12</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="workHoursRow"></tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Create Modal for Tăng Ca Tỉ Lệ -->
<div id="createTangCaTiLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Tạo Mới Tăng Ca Tỉ Lệ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('createTangCaTiLeModal')">×</span>
        </div>
        <form id="createTangCaTiLeForm" class="space-y-4">
            <div>
                <label for="createTangCaName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="createTangCaName" name="name" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="createTangCa" class="block text-sm font-medium text-gray-700">Tỉ Lệ Tăng Ca (%):</label>
                <input type="number" step="0.01" id="createTangCa" name="tangCa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Tạo</button>
        </form>
    </div>
</div>

<!-- Edit Modal for Tăng Ca Tỉ Lệ -->
<div id="editTangCaTiLeModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Chỉnh Sửa Tăng Ca Tỉ Lệ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('editTangCaTiLeModal')">×</span>
        </div>
        <form id="editTangCaTiLeForm" class="space-y-4">
            <input type="hidden" id="editTangCaTiLeId" name="id">
            <div>
                <label for="editTangCaName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="editTangCaName" name="name" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="editTangCa" class="block text-sm font-medium text-gray-700">Tỉ Lệ Tăng Ca (%):</label>
                <input type="number" step="0.01" id="editTangCa" name="tangCa" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Lưu</button>
        </form>
    </div>
</div>

<!-- Create Modal for Bù Giờ -->
<div id="createBuGioModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Tạo Mới Bù Giờ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('createBuGioModal')">×</span>
        </div>
        <form id="createBuGioForm" class="space-y-4">
            <div>
                <label for="createBuGioName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="createBuGioName" name="name" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="createLamBu" class="block text-sm font-medium text-gray-700">Tỉ Lệ Bù Giờ (%):</label>
                <input type="number" step="0.01" id="createLamBu" name="lamBu" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Tạo</button>
        </form>
    </div>
</div>

<!-- Edit Modal for Bù Giờ -->
<div id="editBuGioModal" class="modal fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50 hidden">
    <div class="modal-content bg-white rounded-lg p-6 w-full max-w-md max-h-[80vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Chỉnh Sửa Bù Giờ</h2>
            <span class="close text-gray-500 hover:text-gray-700 cursor-pointer text-2xl" onclick="closeModal('editBuGioModal')">×</span>
        </div>
        <form id="editBuGioForm" class="space-y-4">
            <input type="hidden" id="editBuGioId" name="id">
            <div>
                <label for="editBuGioName" class="block text-sm font-medium text-gray-700">Tên:</label>
                <input type="text" id="editBuGioName" name="name" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <div>
                <label for="editLamBu" class="block text-sm font-medium text-gray-700">Tỉ Lệ Bù Giờ (%):</label>
                <input type="number" step="0.01" id="editLamBu" name="lamBu" class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-sm" required>
            </div>
            <button type="submit" class="w-full px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors text-sm">Lưu</button>
        </form>
    </div>
</div>

@section Scripts {
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
            <script>
                // Tab Management
                function openTab(evt, tabName) {
                    $(".tabcontent").addClass("hidden");
                    $(".tablinks").removeClass("active");
                    $("#" + tabName).removeClass("hidden");
                    evt.currentTarget.className += " active";
                    loadData(tabName);
                }

                // Modal Management
                function closeModal(modalId) {
                    $("#" + modalId).addClass("hidden");
                }

                function showModal(modalId) {
                    $("#" + modalId).removeClass("hidden");
                }

                // Load Data for Tables
                function loadData(tabName) {
                    var apiUrl = "";
                    var tableId = "";
                    var html = "";

                    switch (tabName) {
                        case "ChamCongGioRaVao":
                            $.ajax({
                                url: "/api/WorkTimeSettingApi/cham-cong-gio-ra-vao",
                                method: "GET",
                                success: function (data) {
                                    if (data && data.length > 0) {
                                        var latestRecord = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0];
                                        $("#thoiGianVao").val(latestRecord.thoiGianVao || "");
                                        $("#thoiGianRa").val(latestRecord.thoiGianRa || "");
                                    }
                                },
                                error: function (xhr) {
                                    console.error("Error loading data for ChamCongGioRaVao:", xhr);
                                    Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                                }
                            });
                            break;

                        case "TangCaTiLe":
                            apiUrl = "/api/WorkTimeSettingApi/tang-ca-ti-le";
                            tableId = "#tangCaTiLeTable tbody";
                            $.ajax({
                                url: apiUrl,
                                method: "GET",
                                success: function (data) {
                                    $(tableId).empty();
                                    if (data && data.length > 0) {
                                        var latestRecord = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0];
                                        html += `<tr class="hover:bg-gray-50">
                                            <td class="px-4 py-2 text-sm text-gray-600 border-b">${latestRecord.name || 'N/A'}</td>
                                            <td class="px-4 py-2 text-sm text-gray-600 border-b">${latestRecord.tangCa.toFixed(2)}</td>
                                            <td class="px-4 py-2 text-sm border-b">
                                                <button class="inline-flex items-center px-2 py-1 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition-colors text-xs" onclick="openEditTangCaTiLeModal(${latestRecord.id})">
                                                    <i class="fas fa-edit mr-1"></i>Sửa
                                                </button>
                                            </td>
                                        </tr>`;
                                    }
                                    $(tableId).html(html || "<tr><td colspan='3' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Không có dữ liệu</td></tr>");
                                },
                                error: function (xhr) {
                                    console.error("Error loading data for TangCaTiLe:", xhr);
                                    $(tableId).html("<tr><td colspan='3' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Lỗi tải dữ liệu</td></tr>");
                                }
                            });
                            break;

                        case "BuGio":
                            apiUrl = "/api/WorkTimeSettingApi/bu-gio";
                            tableId = "#buGioTable tbody";
                            $.ajax({
                                url: apiUrl,
                                method: "GET",
                                success: function (data) {
                                    $(tableId).empty();
                                    if (data && data.length > 0) {
                                        var latestRecord = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))[0];
                                        html += `<tr class="hover:bg-gray-50">
                                            <td class="px-4 py-2 text-sm text-gray-600 border-b">${latestRecord.name || 'N/A'}</td>
                                            <td class="px-4 py-2 text-sm text-gray-600 border-b">${latestRecord.lamBu.toFixed(2)}</td>
                                            <td class="px-4 py-2 text-sm border-b">
                                                <button class="inline-flex items-center px-2 py-1 rounded-lg bg-yellow-500 text-white hover:bg-yellow-600 transition-colors text-xs" onclick="openEditBuGioModal(${latestRecord.id})">
                                                    <i class="fas fa-edit mr-1"></i>Sửa
                                                </button>
                                            </td>
                                        </tr>`;
                                    }
                                    $(tableId).html(html || "<tr><td colspan='3' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Không có dữ liệu</td></tr>");
                                },
                                error: function (xhr) {
                                    console.error("Error loading data for BuGio:", xhr);
                                    $(tableId).html("<tr><td colspan='3' class='px-4 py-2 text-sm text-gray-600 border-b text-center'>Lỗi tải dữ liệu</td></tr>");
                                }
                            });
                            break;

                        case "LichLamViecVaGioChuan":
                            initializeCalendar();
                            updateToggleButtons();
                            break;
                    }
                }

                // Schedule Activation
                let activeSchedule = localStorage.getItem('activeSchedule') || 'T2-T6'; // Default to T2-T6

                function activateSchedule(schedule) {
                    activeSchedule = schedule;
                    localStorage.setItem('activeSchedule', schedule);
                    updateToggleButtons();
                    Swal.fire("Thành công!", `Đã kích hoạt lịch ${schedule}`, "success");
                }

                function updateToggleButtons() {
                    const schedules = ['T2-T6', 'T2-NuaT7', 'T2-T7'];
                    schedules.forEach(s => {
                        const btn = $(`#activate-${s}`);
                        if (s === activeSchedule) {
                            btn.text('Đã Kích Hoạt').removeClass('bg-blue-600 hover:bg-blue-700').addClass('bg-green-500 hover:bg-green-600').prop('disabled', true);
                        } else {
                            btn.text('Kích Hoạt').removeClass('bg-green-500 hover:bg-green-600').addClass('bg-blue-600 hover:bg-blue-700').prop('disabled', false);
                        }
                    });
                }

                // Populate Year Dropdown
                function populateYearDropdown() {
                    var currentYear = new Date().getFullYear();
                    var startYear = currentYear - 5;
                    var endYear = currentYear + 5;
                    var selectYear = $("#selectYear");
                    selectYear.empty();
                    for (var year = startYear; year <= endYear; year++) {
                        selectYear.append(`<option value="${year}">${year}</option>`);
                    }
                    selectYear.val(currentYear);
                }

                // Initialize FullCalendar
                let holidays = [];
                function initializeCalendar() {
                    var year = parseInt($("#selectYear").val());
                    var calendarEl = document.getElementById('calendar');
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        initialDate: `${year}-01-01`,
                        headerToolbar: {
                            left: 'prev,next',
                            center: 'title',
                            right: 'today'
                        },
                        events: holidays,
                        selectable: true,
                        select: function (info) {
                            var dateStr = info.startStr.split('T')[0];
                            if (!holidays.some(h => h.start === dateStr)) {
                                holidays.push({ title: 'Ngày Nghỉ', start: dateStr });
                                calendar.addEvent({ title: 'Ngày Nghỉ', start: dateStr });
                            }
                        },
                        eventClick: function (info) {
                            if (confirm('Xóa ngày nghỉ này?')) {
                                holidays = holidays.filter(h => h.start !== info.event.startStr);
                                info.event.remove();
                            }
                        }
                    });
                    calendar.render();

                    // Load existing holidays
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/holidays/${year}`,
                        method: "GET",
                        success: function (data) {
                            holidays = data.map(date => ({ title: 'Ngày Nghỉ', start: date }));
                            calendar.removeAllEvents();
                            holidays.forEach(h => calendar.addEvent(h));
                            calendar.render();
                        },
                        error: function (xhr) {
                            console.error("Error loading holidays:", xhr);
                            Swal.fire("Lỗi!", "Không thể tải ngày nghỉ.", "error");
                        }
                    });

                    $("#selectYear").on("change", function () {
                        year = parseInt($(this).val());
                        calendar.gotoDate(`${year}-01-01`);
                        $.ajax({
                            url: `/api/WorkTimeSettingApi/holidays/${year}`,
                            method: "GET",
                            success: function (data) {
                                holidays = data.map(date => ({ title: 'Ngày Nghỉ', start: date }));
                                calendar.removeAllEvents();
                                holidays.forEach(h => calendar.addEvent(h));
                                calendar.render();
                            },
                            error: function (xhr) {
                                console.error("Error loading holidays:", xhr);
                                Swal.fire("Lỗi!", "Không thể tải ngày nghỉ.", "error");
                            }
                        });
                    });
                }

                // Calculate Standard Work Hours
                function calculateWorkHours() {
                    if (!activeSchedule) {
                        Swal.fire("Lỗi!", "Vui lòng kích hoạt một lịch làm việc trước khi tạo lịch.", "error");
                        return;
                    }

                    var year = parseInt($("#selectYear").val());
                    var workHours = Array(12).fill(0);

                    for (var month = 0; month < 12; month++) {
                        var daysInMonth = new Date(year, month + 1, 0).getDate();
                        var sundayCount = 0;
                        var saturdayCount = 0;
                        var weekdayCount = 0;
                        var holidayCount = 0;

                        // Count days in the month
                        for (var day = 1; day <= daysInMonth; day++) {
                            var date = new Date(year, month, day);
                            var dateStr = date.toISOString().split('T')[0];
                            var dayOfWeek = date.getDay(); // 0: Sunday, 1: Monday, ..., 6: Saturday

                            if (holidays.some(h => h.start === dateStr)) {
                                holidayCount++;
                                continue;
                            }

                            if (dayOfWeek === 0) {
                                sundayCount++;
                            } else if (dayOfWeek === 6) {
                                saturdayCount++;
                            } else {
                                weekdayCount++;
                            }
                        }

                        if (activeSchedule === "T2-T6") {
                            // Option 1: Monday–Friday, 8 hours/day
                            var workingDays = weekdayCount; // Exclude Saturdays, Sundays, and holidays
                            workHours[month] = workingDays * 8;
                        } else if (activeSchedule === "T2-NuaT7") {
                            // Option 2: Monday–Friday (8 hours), Saturday (4 hours), exclude Sundays
                            workHours[month] = (weekdayCount * 8) + (saturdayCount * 4);
                        } else if (activeSchedule === "T2-T7") {
                            // Option 3: Monday–Saturday (8 hours), exclude Sundays
                            var workingDays = weekdayCount + saturdayCount;
                            workHours[month] = workingDays * 8;
                        }
                    }

                    var rowHtml = workHours.map(hours => `<td class="px-4 py-2 text-sm text-gray-600 border-b text-center">${hours.toFixed(1)}</td>`).join("");
                    $("#workHoursRow").html(rowHtml);

                    // Save holidays
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/holidays/${year}`,
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(holidays.map(h => h.start)),
                        success: function () {
                            console.log("Holidays saved successfully");
                            Swal.fire("Thành công!", "Đã tạo lịch giờ chuẩn.", "success");
                        },
                        error: function (xhr) {
                            console.error("Error saving holidays:", xhr);
                            Swal.fire("Lỗi!", "Không thể lưu ngày nghỉ.", "error");
                        }
                    });
                }

                // Modal Handlers
                function openCreateTangCaTiLeModal() {
                    $("#createTangCaTiLeForm")[0].reset();
                    showModal("createTangCaTiLeModal");
                }

                function openEditTangCaTiLeModal(id) {
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/tang-ca-ti-le/${id}`,
                        method: "GET",
                        success: function (data) {
                            $("#editTangCaTiLeId").val(data.id);
                            $("#editTangCaName").val(data.name);
                            $("#editTangCa").val(data.tangCa);
                            showModal("editTangCaTiLeModal");
                        },
                        error: function (xhr) {
                            console.error("Error fetching TangCaTiLe:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                        }
                    });
                }

                function openCreateBuGioModal() {
                    $("#createBuGioForm")[0].reset();
                    showModal("createBuGioModal");
                }

                function openEditBuGioModal(id) {
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/bu-gio/${id}`,
                        method: "GET",
                        success: function (data) {
                            $("#editBuGioId").val(data.id);
                            $("#editBuGioName").val(data.name);
                            $("#editLamBu").val(data.lamBu);
                            showModal("editBuGioModal");
                        },
                        error: function (xhr) {
                            console.error("Error fetching BuGio:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tải dữ liệu.", "error");
                        }
                    });
                }

                // Form Submissions
                $("#chamCongGioRaVaoForm").submit(function (e) {
                    e.preventDefault();
                    var data = {
                        thoiGianVao: $("#thoiGianVao").val(),
                        thoiGianRa: $("#thoiGianRa").val()
                    };
                    $.ajax({
                        url: "/api/WorkTimeSettingApi/cham-cong-gio-ra-vao",
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function () {
                            Swal.fire("Thành công!", "Cập nhật giờ ra vào thành công!", "success");
                        },
                        error: function (xhr) {
                            console.error("Error saving ChamCongGioRaVao:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể lưu dữ liệu.", "error");
                        }
                    });
                });

                $("#createTangCaTiLeForm").submit(function (e) {
                    e.preventDefault();
                    var data = {
                        name: $("#createTangCaName").val(),
                        tangCa: parseFloat($("#createTangCa").val())
                    };
                    $.ajax({
                        url: "/api/WorkTimeSettingApi/tang-ca-ti-le",
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function () {
                            Swal.fire("Thành công!", "Tạo mới thành công!", "success");
                            closeModal("createTangCaTiLeModal");
                            loadData("TangCaTiLe");
                        },
                        error: function (xhr) {
                            console.error("Error creating TangCaTiLe:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tạo mới dữ liệu.", "error");
                        }
                    });
                });

                $("#editTangCaTiLeForm").submit(function (e) {
                    e.preventDefault();
                    var data = {
                        id: parseInt($("#editTangCaTiLeId").val()),
                        name: $("#editTangCaName").val(),
                        tangCa: parseFloat($("#editTangCa").val())
                    };
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/tang-ca-ti-le/${data.id}`,
                        method: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function () {
                            Swal.fire("Thành công!", "Cập nhật thành công!", "success");
                            closeModal("editTangCaTiLeModal");
                            loadData("TangCaTiLe");
                        },
                        error: function (xhr) {
                            console.error("Error updating TangCaTiLe:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật dữ liệu.", "error");
                        }
                    });
                });

                $("#createBuGioForm").submit(function (e) {
                    e.preventDefault();
                    var data = {
                        name: $("#createBuGioName").val(),
                        lamBu: parseFloat($("#createLamBu").val())
                    };
                    $.ajax({
                        url: "/api/WorkTimeSettingApi/bu-gio",
                        method: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function () {
                            Swal.fire("Thành công!", "Tạo mới thành công!", "success");
                            closeModal("createBuGioModal");
                            loadData("BuGio");
                        },
                        error: function (xhr) {
                            console.error("Error creating BuGio:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể tạo mới dữ liệu.", "error");
                        }
                    });
                });

                $("#editBuGioForm").submit(function (e) {
                    e.preventDefault();
                    var data = {
                        id: parseInt($("#editBuGioId").val()),
                        name: $("#editBuGioName").val(),
                        lamBu: parseFloat($("#editLamBu").val())
                    };
                    $.ajax({
                        url: `/api/WorkTimeSettingApi/bu-gio/${data.id}`,
                        method: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function () {
                            Swal.fire("Thành công!", "Cập nhật thành công!", "success");
                            closeModal("editBuGioModal");
                            loadData("BuGio");
                        },
                        error: function (xhr) {
                            console.error("Error updating BuGio:", xhr);
                            Swal.fire("Lỗi!", xhr.responseJSON?.message || "Không thể cập nhật dữ liệu.", "error");
                        }
                    });
                });

                // Generate Schedule
                $("#generateSchedule").click(function () {
                    calculateWorkHours();
                });

                // Initialization
                $(document).ready(function () {
                    $(".tablinks").first().click();
                    populateYearDropdown();
                    updateToggleButtons();
                });
            </script>
}