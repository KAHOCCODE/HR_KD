@model HR_KD.DTOs.ThongTinLuongNVDTO

@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
        <div class="bg-white shadow-lg rounded-xl overflow-hidden">
            <div class="bg-gradient-to-r from-yellow-500 to-yellow-700 px-6 py-5">
                <h2 class="text-2xl font-semibold text-white text-center">
                    <i class="fas fa-money-check-alt mr-2"></i>
                    Chỉnh Sửa Lương Nhân Viên
                </h2>
            </div>

            <div class="p-6 bg-gray-50 border-b border-gray-200">
                <div class="progress h-2 bg-gray-200 rounded-full overflow-hidden">
                    <div id="formProgress" class="h-full bg-yellow-500 transition-all duration-500 ease-in-out"
                         style="width: 0%" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="flex justify-between mt-3 text-sm font-medium text-gray-600">
                    <span>Thông tin cơ bản</span>
                    <span>Phụ cấp & BH</span>
                    <span>Hoàn tất</span>
                </div>
            </div>

            <form id="editSalaryForm" class="p-6 sm:p-8">
                <input type="hidden" id="MaLuongNV" name="MaLuongNV" value="@Model.MaLuongNV" />
                <input type="hidden" id="MaNv" name="MaNv" value="@Model.MaNv" />
                <input type="hidden" id="minimumWage" value="0" />

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <!-- Left Column -->
                    <div class="space-y-6">
                        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">
                                <i class="fas fa-file-invoice-dollar mr-2 text-yellow-600"></i>
                                Thông tin cơ bản
                            </h3>

                            <div class="space-y-5">
                                <div>
                                    <label for="LuongCoBan" class="block text-sm font-medium text-gray-700">
                                        Lương Cơ Bản <span class="text-red-500">*</span>
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="number" step="0.01" id="LuongCoBan" name="LuongCoBan"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50 text-gray-900"
                                               placeholder="Nhập lương cơ bản" required />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                    </div>
                                    <p id="minimumWageText" class="mt-1 text-xs text-gray-500">
                                        Lương cơ bản trước thuế (Tối thiểu: <span id="minimumWageValue">0</span> VNĐ)
                                    </p>
                                </div>

                                <div>
                                    <label for="ThuongCoDinh" class="block text-sm font-medium text-gray-700">
                                        Thưởng Cố Định
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="number" step="0.01" id="ThuongCoDinh" name="ThuongCoDinh"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                               placeholder="Nhập thưởng cố định" />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                    </div>
                                    <p class="mt-1 text-xs text-gray-500">Thưởng cố định hàng tháng</p>
                                </div>

                                <div>
                                    <label for="NgayApDung" class="block text-sm font-medium text-gray-700">
                                        Ngày Áp Dụng <span class="text-red-500">*</span>
                                    </label>
                                    <input type="text" id="NgayApDung" name="NgayApDung"
                                           class="flatpickr w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                           placeholder="Chọn ngày" required />
                                    <p class="mt-1 text-xs text-gray-500">Ngày bắt đầu áp dụng</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="space-y-6">
                        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">
                                <i class="fas fa-shield-alt mr-2 text-yellow-600"></i>
                                Phụ cấp & Bảo hiểm
                            </h3>

                            <div class="space-y-5">
                                <div>
                                    <label for="PhuCapCoDinh" class="block text-sm font-medium text-gray-700">
                                        Phụ Cấp Cố Định
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="number" step="0.01" id="PhuCapCoDinh" name="PhuCapCoDinh"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                               placeholder="Nhập phụ cấp cố định" />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                    </div>
                                    <p class="mt-1 text-xs text-gray-500">Phụ cấp cố định hàng tháng</p>
                                </div>

                                <div class="grid grid-cols-3 gap-4">
                                    <div>
                                        <label for="BHXH" class="block text-sm font-medium text-gray-700">BHXH</label>
                                        <input type="number" step="0.01" id="BHXH" name="BHXH"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                               placeholder="BHXH" readonly />
                                    </div>
                                    <div>
                                        <label for="BHYT" class="block text-sm font-medium text-gray-700">BHYT</label>
                                        <input type="number" step="0.01" id="BHYT" name="BHYT"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                               placeholder="BHYT" readonly />
                                    </div>
                                    <div>
                                        <label for="BHTN" class="block text-sm font-medium text-gray-700">BHTN</label>
                                        <input type="number" step="0.01" id="BHTN" name="BHTN"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                               placeholder="BHTN" readonly />
                                    </div>
                                </div>
                                <p class="text-xs text-gray-500">Bảo hiểm xã hội, y tế, thất nghiệp (tự động tính)</p>

                                <div>
                                    <label for="GhiChu" class="block text-sm font-medium text-gray-700">Ghi Chú</label>
                                    <textarea id="GhiChu" name="GhiChu" rows="4"
                                              class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 bg-gray-50"
                                              placeholder="Thông tin bổ sung"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Summary Section -->
                <div class="mt-8 bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <h3 class="text-xl font-semibold text-gray-800 mb-4">
                        <i class="fas fa-calculator mr-2 text-yellow-600"></i>
                        Tóm tắt lương
                    </h3>
                    <div class="border-t border-gray-200 pt-4">
                        <div class="grid grid-cols-2 gap-4">
                            <div class="flex justify-between">
                                <span class="text-gray-600 font-medium">Tổng thu nhập:</span>
                                <span id="tongThuNhap" class="font-semibold text-green-600">0 VNĐ</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 font-medium">Tổng khấu trừ:</span>
                                <span id="tongKhauTru" class="font-semibold text-red-600">0 VNĐ</span>
                            </div>
                            <div class="flex justify-between col-span-2 pt-4 border-t">
                                <span class="text-gray-600 font-semibold">Lương thực lãnh:</span>
                                <span id="luongThucLanh" class="font-bold text-yellow-700 text-lg">0 VNĐ</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="mt-8 flex justify-between">
                    <a href="/Employees/Index"
                       class="inline-flex items-center px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors font-medium">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Quay Lại
                    </a>
                    <button type="submit"
                            class="inline-flex items-center px-6 py-2.5 rounded-lg bg-yellow-600 text-white hover:bg-yellow-700 transition-colors font-medium">
                        <i class="fas fa-save mr-2"></i>
                        Lưu Thông Tin
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $(document).ready(function () {
            let insuranceRates = { BHXH: 0, BHYT: 0, BHTN: 0 };

            // Utility to format today's date as YYYY-MM-DD
            function getTodayDate() {
                const today = new Date();
                return today.toISOString().split("T")[0]; // e.g., "2025-04-26"
            }

            // Currency formatter
            function formatCurrency(amount) {
                return new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND',
                    maximumFractionDigits: 0
                }).format(amount);
            }

            // Update insurance fields based on LuongCoBan
            function updateInsuranceFields() {
                let luongCoBan = parseFloat($("#LuongCoBan").val()) || 0;
                $("#BHXH").val((luongCoBan * (insuranceRates.BHXH / 100)).toFixed(2));
                $("#BHYT").val((luongCoBan * (insuranceRates.BHYT / 100)).toFixed(2));
                $("#BHTN").val((luongCoBan * (insuranceRates.BHTN / 100)).toFixed(2));
                updateSummary();
            }

            // Update progress bar
            function updateProgressBar() {
                let requiredFields = ["LuongCoBan", "NgayApDung"];
                let filledCount = 0;

                requiredFields.forEach(field => {
                    if ($("#" + field).val()) filledCount++;
                });

                let optionalFields = ["PhuCapCoDinh", "ThuongCoDinh", "GhiChu"];
                optionalFields.forEach(field => {
                    if ($("#" + field).val() && $("#" + field).val() !== "0") {
                        filledCount += 0.5;
                    }
                });

                let progressPercent = Math.min(100, Math.round((filledCount / (requiredFields.length + 2)) * 100));
                $("#formProgress").css("width", progressPercent + "%").attr("aria-valuenow", progressPercent);
            }

            // Update summary
            function updateSummary() {
                let luongCoBan = parseFloat($("#LuongCoBan").val()) || 0;
                let phuCapCoDinh = parseFloat($("#PhuCapCoDinh").val()) || 0;
                let thuongCoDinh = parseFloat($("#ThuongCoDinh").val()) || 0;
                let bhxh = parseFloat($("#BHXH").val()) || 0;
                let bhyt = parseFloat($("#BHYT").val()) || 0;
                let bhtn = parseFloat($("#BHTN").val()) || 0;

                let tongThuNhap = luongCoBan + phuCapCoDinh + thuongCoDinh;
                let tongKhauTru = bhxh + bhyt + bhtn;
                let luongThucLanh = tongThuNhap - tongKhauTru;

                $("#tongThuNhap").text(formatCurrency(tongThuNhap));
                $("#tongKhauTru").text(formatCurrency(tongKhauTru));
                $("#luongThucLanh").text(formatCurrency(luongThucLanh));
            }

            // Fetch minimum wage and insurance rates
            function loadInitialData() {
                // Fetch active minimum wage
                $.ajax({
                    url: "/api/PayrollSettingApi/muc-luong-toi-thieu-vung",
                    method: "GET",
                    success: function (data) {
                        var activeMinimumWage = data.find(m => m.isActive);
                        if (activeMinimumWage) {
                            $("#minimumWage").val(activeMinimumWage.mucLuongToiThieuThang);
                            $("#minimumWageValue").text(activeMinimumWage.mucLuongToiThieuThang.toLocaleString());
                            $("#LuongCoBan").attr("min", activeMinimumWage.mucLuongToiThieuThang);
                            updateProgressBar();
                            updateSummary();
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi",
                                text: "Không tìm thấy mức lương tối thiểu vùng đang hoạt động.",
                                confirmButtonColor: "#ca8a04"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi",
                            text: "Không thể tải mức lương tối thiểu.",
                            confirmButtonColor: "#ca8a04"
                        });
                    }
                });

                // Fetch insurance rates
                $.ajax({
                    url: "/api/PayrollSettingApi/thong-tin-bao-hiem",
                    method: "GET",
                    success: function (data) {
                        data.forEach(item => {
                            if (!item.ngayHetHieuLuc) {
                                if (item.loaiBaoHiem === "BHXH") insuranceRates.BHXH = item.tyLeNguoiLaoDong;
                                if (item.loaiBaoHiem === "BHYT") insuranceRates.BHYT = item.tyLeNguoiLaoDong;
                                if (item.loaiBaoHiem === "BHTN") insuranceRates.BHTN = item.tyLeNguoiLaoDong;
                            }
                        });
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi",
                            text: "Không thể tải tỷ lệ bảo hiểm.",
                            confirmButtonColor: "#ca8a04"
                        });
                    }
                });
            }

            // Fetch salary details and initialize form
            let maNv = $("#MaNv").val();
            if (maNv) {
                Swal.fire({
                    title: "Đang tải...",
                    text: "Vui lòng chờ trong giây lát",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                $.ajax({
                    url: "/api/SalaryApi/" + maNv,
                    method: "GET",
                    success: function (data) {
                        // Populate form fields with fetched data
                        $("#LuongCoBan").val(data.luongCoBan || 0);
                        $("#PhuCapCoDinh").val(data.phuCapCoDinh || 0);
                        $("#ThuongCoDinh").val(data.thuongCoDinh || 0);
                        $("#GhiChu").val(data.ghiChu || "");

                        // Handle insurance fields (will be recalculated)
                        $("#BHXH").val(0);
                        $("#BHYT").val(0);
                        $("#BHTN").val(0);

                        // Set date, default to today if invalid
                        let defaultDate = getTodayDate();
                        if (data.ngayApDung && !isNaN(new Date(data.ngayApDung).getTime())) {
                            defaultDate = data.ngayApDung.split("T")[0];
                        }

                        // Set input value explicitly
                        $("#NgayApDung").val(defaultDate);

                        // Initialize Flatpickr
                        flatpickr("#NgayApDung", {
                            dateFormat: "Y-m-d",
                            altInput: true,
                            altFormat: "d/m/Y",
                            minDate: "today",
                            defaultDate: defaultDate,
                            onReady: function(selectedDates, dateStr, instance) {
                                $(instance.input).removeAttr("disabled").removeAttr("readonly");
                                instance.altInput.setAttribute("placeholder", "dd/mm/yyyy");
                                // Force set the input value to ensure display
                                instance.setDate(defaultDate, true);
                            },
                            onOpen: function(selectedDates, dateStr, instance) {
                                instance.calendarContainer.style.zIndex = "9999";
                            }
                        });

                        // Update insurance fields and summary after loading rates
                        loadInitialData();
                        setTimeout(() => {
                            updateInsuranceFields();
                            updateProgressBar();
                            updateSummary();
                            Swal.close();
                        }, 500); // Delay to ensure rates are loaded
                    },
                    error: function (xhr) {
                        // Initialize Flatpickr with today's date on error
                        flatpickr("#NgayApDung", {
                            dateFormat: "Y-m-d",
                            altInput: true,
                            altFormat: "d/m/Y",
                            minDate: "today",
                            defaultDate: getTodayDate(),
                            onReady: function(selectedDates, dateStr, instance) {
                                $(instance.input).removeAttr("disabled").removeAttr("readonly");
                                instance.altInput.setAttribute("placeholder", "dd/mm/yyyy");
                                instance.setDate(getTodayDate(), true);
                            },
                            onOpen: function(selectedDates, dateStr, instance) {
                                instance.calendarContainer.style.zIndex = "9999";
                            }
                        });
                        loadInitialData();
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi",
                            text: xhr.responseText || "Không thể tải thông tin lương.",
                            confirmButtonColor: "#ca8a04"
                        });
                    }
                });
            } else {
                // Initialize with today’s date if no MaNv
                flatpickr("#NgayApDung", {
                    dateFormat: "Y-m-d",
                    altInput: true,
                    altFormat: "d/m/Y",
                    minDate: "today",
                    defaultDate: getTodayDate(),
                    onReady: function(selectedDates, dateStr, instance) {
                        $(instance.input).removeAttr("disabled").removeAttr("readonly");
                        instance.altInput.setAttribute("placeholder", "dd/mm/yyyy");
                        instance.setDate(getTodayDate(), true);
                    },
                    onOpen: function(selectedDates, dateStr, instance) {
                        instance.calendarContainer.style.zIndex = "9999";
                    }
                });
                $("#NgayApDung").val(getTodayDate());
                loadInitialData();
            }

            // Form input handlers
            $("#LuongCoBan").on("input change keyup", function() {
                updateInsuranceFields();
                updateProgressBar();
                updateSummary();
            });

            $("input:not(#LuongCoBan), textarea").on("input change keyup", function() {
                updateProgressBar();
                updateSummary();
            });

            // Form submission
            $("#editSalaryForm").submit(function (e) {
                e.preventDefault();

                // Progress bar animation
                $("#formProgress").css({
                    "width": "100%",
                    "transition": "width 0.8s ease-in-out"
                });

                // Validate required fields
                let requiredFields = [
                    { id: "LuongCoBan", name: "Lương Cơ Bản" },
                    { id: "NgayApDung", name: "Ngày Áp Dụng" }
                ];

                for (let field of requiredFields) {
                    if (!$("#" + field.id).val()) {
                        Swal.fire({
                            icon: "warning",
                            title: "Thiếu thông tin",
                            text: `Vui lòng nhập ${field.name}!`,
                            confirmButtonColor: "#ca8a04"
                        });
                        return;
                    }
                }

                // Validate minimum wage
                let luongCoBan = parseFloat($("#LuongCoBan").val());
                let minimumWage = parseFloat($("#minimumWage").val());
                if (luongCoBan < minimumWage) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lương không hợp lệ",
                        text: `Lương cơ bản phải lớn hơn hoặc bằng ${formatCurrency(minimumWage)}!`,
                        confirmButtonColor: "#ca8a04"
                    });
                    return;
                }

                // Validate negative values
                let salaryFields = ["LuongCoBan", "PhuCapCoDinh", "ThuongCoDinh"];
                for (let field of salaryFields) {
                    let value = parseFloat($("#" + field).val());
                    if (value < 0) {
                        Swal.fire({
                            icon: "warning",
                            title: "Dữ liệu không hợp lệ",
                            text: `Giá trị ${field} không được âm!`,
                            confirmButtonColor: "#ca8a04"
                        });
                        return;
                    }
                }

                // Prepare data
                let salaryData = {
                    MaLuongNV: parseInt($("#MaLuongNV").val()),
                    MaNv: parseInt($("#MaNv").val()),
                    LuongCoBan: parseFloat($("#LuongCoBan").val()),
                    PhuCapCoDinh: parseFloat($("#PhuCapCoDinh").val()) || 0,
                    ThuongCoDinh: parseFloat($("#ThuongCoDinh").val()) || 0,
                    BHXH: parseFloat($("#BHXH").val()) || 0,
                    BHYT: parseFloat($("#BHYT").val()) || 0,
                    BHTN: parseFloat($("#BHTN").val()) || 0,
                    NgayApDung: $("#NgayApDung").val(),
                    GhiChu: $("#GhiChu").val()
                };

                // Show loading
                Swal.fire({
                    title: "Đang xử lý...",
                    text: "Vui lòng chờ trong giây lát",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // API call to update salary
                $.ajax({
                    url: "/api/SalaryApi/edit/" + salaryData.MaLuongNV,
                    method: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify(salaryData),
                    success: function () {
                        Swal.fire({
                            icon: "success",
                            title: "Thành công!",
                            text: "Thông tin lương đã được cập nhật!",
                            confirmButtonColor: "#ca8a04",
                            timer: 2000,
                            timerProgressBar: true
                        }).then(() => {
                            window.location.href = "/Employees/Index";
                        });
                    },
                    error: function (xhr) {
                        let errorMessage = xhr.responseJSON?.message || xhr.responseText || "Lỗi không xác định!";
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi!",
                            text: errorMessage,
                            confirmButtonColor: "#ca8a04"
                        });
                    }
                });
            });
        });
    </script>
}