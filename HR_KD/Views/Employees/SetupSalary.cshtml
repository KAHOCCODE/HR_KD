@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
        <div class="bg-white shadow-lg rounded-xl overflow-hidden">
            <div class="bg-gradient-to-r from-blue-700 to-indigo-700 px-6 py-5">
                <h2 class="text-2xl font-semibold text-white text-center">
                    <i class="fas fa-money-check-alt mr-2"></i>
                    Thiết Lập Lương Nhân Viên
                </h2>
            </div>

            <div class="p-6 bg-gray-50 border-b border-gray-200">
                <div class="progress h-2 bg-gray-200 rounded-full overflow-hidden">
                    <div id="formProgress" class="h-full bg-blue-500 transition-all duration-500 ease-in-out"
                         style="width: 0%" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <div class="flex justify-between mt-3 text-sm font-medium text-gray-600">
                    <span>Thông tin cơ bản</span>
                    <span>Phụ cấp & BH</span>
                    <span>Hoàn tất</span>
                </div>
            </div>

            <form id="setupSalaryForm" class="p-6 sm:p-8">
                <input type="hidden" id="MaNv" value="@ViewBag.MaNv" />
                <input type="hidden" id="minimumWage" value="0" />

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <!-- Left Column -->
                    <div class="space-y-6">
                        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">
                                <i class="fas fa-file-invoice-dollar mr-2 text-blue-600"></i>
                                Thông tin cơ bản
                            </h3>

                            <div class="space-y-5">
                                <div>
                                    <label for="LuongCoBan" class="block text-sm font-medium text-gray-700">
                                        Lương Cơ Bản <span class="text-red-500">*</span>
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="text" id="LuongCoBan"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50 text-gray-900"
                                               placeholder="Nhập lương cơ bản" list="luongCoBanSuggestions" required />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                        <datalist id="luongCoBanSuggestions">
                                            <option value="10000000">10,000,000 VNĐ</option>
                                            <option value="20000000">20,000,000 VNĐ</option>
                                            <option value="30000000">30,000,000 VNĐ</option>
                                            <option value="40000000">40,000,000 VNĐ</option>
                                            <option value="50000000">50,000,000 VNĐ</option>
                                            <option value="60000000">60,000,000 VNĐ</option>
                                            <option value="70000000">70,000,000 VNĐ</option>
                                            <option value="80000000">80,000,000 VNĐ</option>
                                            <option value="90000000">90,000,000 VNĐ</option>
                                            <option value="100000000">100,000,000 VNĐ</option>
                                        </datalist>
                                    </div>
                                    <p id="minimumWageText" class="mt-1 text-xs text-gray-500">
                                        Lương cơ bản trước thuế (Tối thiểu: <span id="minimumWageValue">0</span> VNĐ, Tối đa: 100,000,000 VNĐ)
                                    </p>
                                </div>

                                <div>
                                    <label for="ThuongCoDinh" class="block text-sm font-medium text-gray-700">
                                        Thưởng Cố Định
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="text" id="ThuongCoDinh" value="0"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                               placeholder="Nhập thưởng cố định" />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                    </div>
                                    <p class="mt-1 text-xs text-gray-500">Thưởng cố định hàng tháng (Tối đa: 100,000,000 VNĐ)</p>
                                </div>

                                <div>
                                    <label for="NgayApDung" class="block text-sm font-medium text-gray-700">
                                        Ngày Áp Dụng <span class="text-red-500">*</span>
                                    </label>
                                    <input type="text" id="NgayApDung"
                                           class="flatpickr w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                           placeholder="Chọn ngày" required />
                                    <p class="mt-1 text-xs text-gray-500">Ngày bắt đầu áp dụng</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="space-y-6">
                        <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                            <h3 class="text-xl font-semibold text-gray-800 mb-4">
                                <i class="fas fa-shield-alt mr-2 text-blue-600"></i>
                                Phụ cấp & Bảo hiểm
                            </h3>

                            <div class="space-y-5">
                                <div>
                                    <label for="PhuCapCoDinh" class="block text-sm font-medium text-gray-700">
                                        Phụ Cấp Cố Định
                                    </label>
                                    <div class="mt-1 relative">
                                        <input type="text" id="PhuCapCoDinh" value="0"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                               placeholder="Nhập phụ cấp cố định" />
                                        <span class="absolute inset-y-0 right-3 flex items-center text-gray-500 text-sm">
                                            VNĐ
                                        </span>
                                    </div>
                                    <p class="mt-1 text-xs text-gray-500">Phụ cấp cố định hàng tháng (Tối đa: 100,000,000 VNĐ)</p>
                                </div>

                                <div class="grid grid-cols-3 gap-4">
                                    <div>
                                        <label for="BHXH" class="block text-sm font-medium text-gray-700">BHXH</label>
                                        <input type="text" id="BHXH" value="0"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                               placeholder="BHXH" readonly />
                                    </div>
                                    <div>
                                        <label for="BHYT" class="block text-sm font-medium text-gray-700">BHYT</label>
                                        <input type="text" id="BHYT" value="0"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                               placeholder="BHYT" readonly />
                                    </div>
                                    <div>
                                        <label for="BHTN" class="block text-sm font-medium text-gray-700">BHTN</label>
                                        <input type="text" id="BHTN" value="0"
                                               class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                               placeholder="BHTN" readonly />
                                    </div>
                                </div>
                                <p class="text-xs text-gray-500">Bảo hiểm xã hội, y tế, thất nghiệp (tự động tính)</p>

                                <div>
                                    <label for="GhiChu" class="block text-sm font-medium text-gray-700">Ghi Chú</label>
                                    <textarea id="GhiChu" rows="4"
                                              class="w-full px-4 py-2.5 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-gray-50"
                                              placeholder="Thông tin bổ sung"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Summary Section -->
                <div class="mt-8 bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <h3 class="text-xl font-semibold text-gray-800 mb-4">
                        <i class="fas fa-calculator mr-2 text-blue-600"></i>
                        Tóm tắt lương
                    </h3>
                    <div class="border-t border-gray-200 pt-4">
                        <div class="grid grid-cols-2 gap-4">
                            <div class="flex justify-between">
                                <span class="text-gray-600 font-medium">Tổng thu nhập:</span>
                                <span id="tongThuNhap" class="font-semibold text-green-600">0 VNĐ</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600 font-medium">Tổng khấu trừ:</span>
                                <span id="tongKhauTru" class="font-semibold text-red-600">0 VNĐ</span>
                            </div>
                            <div class="flex justify-between col-span-2 pt-4 border-t">
                                <span class="text-gray-600 font-semibold">Lương trước thuế:</span>
                                <span id="luongThucLanh" class="font-bold text-blue-700 text-lg">0 VNĐ</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="mt-8 flex justify-between">
                    <a href="/Employees/Index"
                       class="inline-flex items-center px-6 py-2.5 border border-gray-300 rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors font-medium">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Quay Lại
                    </a>
                    <button type="submit"
                            class="inline-flex items-center px-6 py-2.5 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors font-medium">
                        <i class="fas fa-save mr-2"></i>
                        Lưu Thông Tin
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/cleave.js@1.6.0/dist/cleave.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize Cleave.js for number formatting
            new Cleave("#LuongCoBan", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });
            new Cleave("#PhuCapCoDinh", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });
            new Cleave("#ThuongCoDinh", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });
            new Cleave("#BHXH", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });
            new Cleave("#BHYT", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });
            new Cleave("#BHTN", {
                numeral: true,
                numeralThousandsGroupStyle: "thousand",
                numeralDecimalScale: 0,
                delimiter: ","
            });

            // Currency formatter
            function formatCurrency(amount) {
                return new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND',
                    maximumFractionDigits: 0
                }).format(amount);
            }

            // Utility to parse Cleave-formatted input
            function parseCleaveInput(value) {
                return parseFloat(value.replace(/,/g, "")) || 0;
            }

            // Initialize Flatpickr
            flatpickr("#NgayApDung", {
                dateFormat: "Y-m-d",
                altInput: true,
                altFormat: "d/m/Y",
                minDate: "today",
                defaultDate: "today",
                onReady: function(selectedDates, dateStr, instance) {
                    $(instance.input).removeAttr("disabled").removeAttr("readonly");
                    instance.altInput.setAttribute("placeholder", "dd/mm/yyyy");
                },
                onOpen: function(selectedDates, dateStr, instance) {
                    instance.calendarContainer.style.zIndex = "9999";
                }
            });

            // Flag to prevent multiple form submissions
            let isSubmitting = false;

            // Fetch minimum wage
            function loadInitialData() {
                Swal.fire({
                    title: "Đang tải...",
                    text: "Vui lòng chờ trong giây lát",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Fetch active minimum wage
                $.ajax({
                    url: "/api/PayrollSettingApi/muc-luong-toi-thieu-vung",
                    method: "GET",
                    success: function (data) {
                        var activeMinimumWage = data.find(m => m.isActive);
                        if (activeMinimumWage) {
                            $("#minimumWage").val(activeMinimumWage.mucLuongToiThieuThang);
                            $("#minimumWageValue").text(activeMinimumWage.mucLuongToiThieuThang.toLocaleString());
                            updateProgressBar();
                            updateSummary();
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi",
                                text: "Không tìm thấy mức lương tối thiểu vùng đang hoạt động.",
                                confirmButtonColor: "#2563eb"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi",
                            text: "Không thể tải mức lương tối thiểu.",
                            confirmButtonColor: "#2563eb"
                        });
                    },
                    complete: function () {
                        Swal.close(); // Always close loading
                    }
                });
            }

            // Update insurance fields by calling API
            function updateInsuranceFields(showError = true) {
                let luongCoBan = parseCleaveInput($("#LuongCoBan").val());
                let phuCapCoDinh = parseCleaveInput($("#PhuCapCoDinh").val());
                let thuongCoDinh = parseCleaveInput($("#ThuongCoDinh").val());
                let minimumWage = parseFloat($("#minimumWage").val()) || 0;
                const maxReasonableSalary = 100000000; // 100 triệu VNĐ

                // Validate salary
                let errorMessage = "";
                if (luongCoBan > maxReasonableSalary || phuCapCoDinh > maxReasonableSalary || thuongCoDinh > maxReasonableSalary) {
                    errorMessage = `Lương cơ bản, phụ cấp và thưởng cố định không được vượt quá ${formatCurrency(maxReasonableSalary)}!`;
                } else if (luongCoBan + phuCapCoDinh + thuongCoDinh < minimumWage) {
                    errorMessage = `Mức lương đóng bảo hiểm (lương cơ bản + phụ cấp + thưởng) phải lớn hơn hoặc bằng ${formatCurrency(minimumWage)}!`;
                }

                if (errorMessage && showError) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lương không hợp lệ",
                        text: errorMessage,
                        confirmButtonColor: "#2563eb"
                    });
                    $("#BHXH").val("0");
                    $("#BHYT").val("0");
                    $("#BHTN").val("0");
                    updateSummary();
                    return;
                }

                // Call API if validation passes
                $.ajax({
                    url: "/api/SalaryApi/calculate-insurance",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        LuongCoBan: luongCoBan,
                        PhuCapCoDinh: phuCapCoDinh,
                        ThuongCoDinh: thuongCoDinh
                    }),
                    success: function (data) {
                        $("#BHXH").val(Math.round(data.bhxh));
                        $("#BHYT").val(Math.round(data.bhyt));
                        $("#BHTN").val(Math.round(data.bhtn));
                        updateSummary();
                    },
                    error: function (xhr) {
                        if (showError) {
                            let errorMessage = xhr.responseJSON?.message || "Không thể tính toán bảo hiểm.";
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi",
                                text: errorMessage,
                                confirmButtonColor: "#2563eb"
                            });
                        }
                        $("#BHXH").val("0");
                        $("#BHYT").val("0");
                        $("#BHTN").val("0");
                        updateSummary();
                    }
                });
            }

            // Update progress bar
            function updateProgressBar() {
                let requiredFields = ["LuongCoBan", "NgayApDung"];
                let filledCount = 0;

                requiredFields.forEach(field => {
                    if ($("#" + field).val()) filledCount++;
                });

                let optionalFields = ["PhuCapCoDinh", "ThuongCoDinh", "GhiChu"];
                optionalFields.forEach(field => {
                    if ($("#" + field).val() && parseCleaveInput($("#" + field).val()) !== 0) {
                        filledCount += 0.5;
                    }
                });

                let progressPercent = Math.min(100, Math.round((filledCount / (requiredFields.length + 2)) * 100));
                $("#formProgress").css("width", progressPercent + "%").attr("aria-valuenow", progressPercent);
            }

            // Update summary
            function updateSummary() {
                let luongCoBan = parseCleaveInput($("#LuongCoBan").val());
                let phuCapCoDinh = parseCleaveInput($("#PhuCapCoDinh").val());
                let thuongCoDinh = parseCleaveInput($("#ThuongCoDinh").val());
                let bhxh = parseCleaveInput($("#BHXH").val());
                let bhyt = parseCleaveInput($("#BHYT").val());
                let bhtn = parseCleaveInput($("#BHTN").val());

                let tongThuNhap = luongCoBan + phuCapCoDinh + thuongCoDinh;
                let tongKhauTru = bhxh + bhyt + bhtn;
                let luongThucLanh = tongThuNhap - tongKhauTru;

                $("#tongThuNhap").text(formatCurrency(tongThuNhap));
                $("#tongKhauTru").text(formatCurrency(tongKhauTru));
                $("#luongThucLanh").text(formatCurrency(luongThucLanh));
            }

            // Form input handlers with debounce
            let debounceTimeout;
            $("#LuongCoBan, #PhuCapCoDinh, #ThuongCoDinh").on("input change", function() {
                clearTimeout(debounceTimeout);
                debounceTimeout = setTimeout(() => {
                    updateInsuranceFields(false); // Suppress error alerts during typing
                    updateProgressBar();
                    updateSummary();
                }, 500);
            });

            $("input:not(#LuongCoBan, #PhuCapCoDinh, #ThuongCoDinh), textarea").on("input change", function() {
                updateProgressBar();
                updateSummary();
            });

            // Load initial data
            loadInitialData();

            // Form submission
            $("#setupSalaryForm").on("submit", function (e) {
                e.preventDefault();

                // Prevent multiple submissions
                if (isSubmitting) return;
                isSubmitting = true;

                // Progress bar animation
                $("#formProgress").css({
                    "width": "100%",
                    "transition": "width 0.8s ease-in-out"
                });

                // Validate required fields
                let requiredFields = [
                    { id: "LuongCoBan", name: "Lương Cơ Bản" },
                    { id: "NgayApDung", name: "Ngày Áp Dụng" }
                ];

                for (let field of requiredFields) {
                    if (!$("#" + field.id).val()) {
                        Swal.fire({
                            icon: "warning",
                            title: "Thiếu thông tin",
                            text: `Vui lòng nhập ${field.name}!`,
                            confirmButtonColor: "#2563eb"
                        });
                        isSubmitting = false;
                        return;
                    }
                }

                // Validate minimum wage
                let luongCoBan = parseCleaveInput($("#LuongCoBan").val());
                let phuCapCoDinh = parseCleaveInput($("#PhuCapCoDinh").val());
                let thuongCoDinh = parseCleaveInput($("#ThuongCoDinh").val());
                let minimumWage = parseFloat($("#minimumWage").val());
                let luongDongBaoHiem = luongCoBan + phuCapCoDinh + thuongCoDinh;
                if (luongDongBaoHiem < minimumWage) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lương không hợp lệ",
                        text: `Mức lương đóng bảo hiểm (lương cơ bản + phụ cấp + thưởng) phải lớn hơn hoặc bằng ${formatCurrency(minimumWage)}!`,
                        confirmButtonColor: "#2563eb"
                    });
                    isSubmitting = false;
                    return;
                }

                // Validate maximum reasonable salary
                const maxReasonableSalary = 100000000; // 100 triệu VNĐ
                if (luongCoBan > maxReasonableSalary || phuCapCoDinh > maxReasonableSalary || thuongCoDinh > maxReasonableSalary) {
                    Swal.fire({
                        icon: "warning",
                        title: "Lương không hợp lý",
                        text: `Lương cơ bản, phụ cấp và thưởng cố định không được vượt quá ${formatCurrency(maxReasonableSalary)}!`,
                        confirmButtonColor: "#2563eb"
                    });
                    isSubmitting = false;
                    return;
                }

                // Validate negative values
                let salaryFields = ["LuongCoBan", "PhuCapCoDinh", "ThuongCoDinh"];
                for (let field of salaryFields) {
                    let value = parseCleaveInput($("#" + field).val());
                    if (value < 0) {
                        Swal.fire({
                            icon: "warning",
                            title: "Dữ liệu không hợp lệ",
                            text: `Giá trị ${field} không được âm!`,
                            confirmButtonColor: "#2563eb"
                        });
                        isSubmitting = false;
                        return;
                    }
                }

                // Prepare data
                let salaryData = {
                    MaNv: parseInt($("#MaNv").val()),
                    LuongCoBan: parseCleaveInput($("#LuongCoBan").val()),
                    PhuCapCoDinh: parseCleaveInput($("#PhuCapCoDinh").val()),
                    ThuongCoDinh: parseCleaveInput($("#ThuongCoDinh").val()),
                    BHXH: parseCleaveInput($("#BHXH").val()),
                    BHYT: parseCleaveInput($("#BHYT").val()),
                    BHTN: parseCleaveInput($("#BHTN").val()),
                    NgayApDung: $("#NgayApDung").val(),
                    GhiChu: $("#GhiChu").val()
                };

                // Show loading
                Swal.fire({
                    title: "Đang xử lý...",
                    text: "Vui lòng chờ trong giây lát",
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // API call
                $.ajax({
                    url: "/api/SalaryApi/setup",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(salaryData),
                    success: function () {
                        Swal.fire({
                            icon: "success",
                            title: "Thành công!",
                            text: "Thông tin lương đã được thiết lập!",
                            confirmButtonColor: "#2563eb",
                            timer: 2000,
                            timerProgressBar: true
                        }).then(() => {
                            window.location.href = "/Employees/Index";
                        });
                    },
                    error: function (xhr) {
                        let errorMessage = xhr.responseJSON?.message || xhr.responseText || "Lỗi không xác định!";
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi!",
                            text: errorMessage,
                            confirmButtonColor: "#2563eb"
                        });
                    },
                    complete: function () {
                        isSubmitting = false; // Reset flag
                    }
                });
            });
        });
    </script>
}