@{
    ViewData["Title"] = "Quản lý ngày lễ";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<!-- Tailwind CSS -->
<script src="https://cdn.tailwindcss.com"></script>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<script>
    tailwind.config = {
        theme: {
            extend: {
                colors: {
                    primary: {
                        50: '#eff6ff',
                        100: '#dbeafe',
                        200: '#bfdbfe',
                        300: '#93c5fd',
                        400: '#60a5fa',
                        500: '#3b82f6',
                        600: '#2563eb',
                        700: '#1d4ed8',
                        800: '#1e40af',
                        900: '#1e3a8a',
                    },
                }
            }
        }
    }
</script>

<div class="bg-blue-50 min-h-screen p-6">
    <div class="max-w-7xl mx-auto">
        <!-- Header Card -->
        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-6">
            <div class="bg-gradient-to-r from-blue-600 to-blue-800 p-6 text-white">
                <div class="flex items-center">
                    <i class="fas fa-calendar-alt text-3xl mr-4"></i>
                    <h1 class="text-2xl font-bold">Quản lý ngày lễ</h1>
                </div>
            </div>

            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
                    <div>
                        <label for="yearFilter" class="block text-sm font-medium text-gray-700 mb-1">Chọn năm:</label>
                        <div class="relative">
                            <select id="yearFilter" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 rounded-md shadow-sm appearance-none" onchange="loadHolidays()">
                                <option value="">Tất cả</option>
                            </select>
                            <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                                <i class="fas fa-chevron-down text-xs"></i>
                            </div>
                        </div>
                    </div>

                    <div class="flex items-end">
                        <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200" onclick="approveAllHolidays()">
                            <i class="fas fa-check-circle mr-2"></i>Duyệt tất cả theo năm
                        </button>
                    </div>

                    <div class="flex items-end justify-end">
                        <a href="/HolidayManager/Requests" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                            <i class="fas fa-list mr-2"></i>Xem yêu cầu
                        </a>
                    </div>
                </div>

                <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 rounded-lg">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead class="bg-blue-50">
                                <tr>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Tên Ngày Lễ</th>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Ngày Lễ</th>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Số Ngày Nghỉ</th>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Trạng Thái</th>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Mô Tả</th>
                                    <th scope="col" class="py-3.5 px-4 text-sm font-semibold text-gray-900 text-center">Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="holidayTableBody" class="divide-y divide-gray-200 bg-white"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Spinner -->
<div id="loadingSpinner" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-50 hidden">
    <div class="inline-block h-16 w-16 animate-spin rounded-full border-4 border-solid border-white border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]">
        <span class="sr-only">Đang tải...</span>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        loadHolidayYears();
        loadHolidays();
    });

    function showLoading() {
        document.getElementById('loadingSpinner').classList.remove('hidden');
    }

    function hideLoading() {
        document.getElementById('loadingSpinner').classList.add('hidden');
    }

    function loadHolidayYears() {
        showLoading();
        fetch('/api/holidaymanager/years', { headers: { 'Accept': 'application/json' } })
            .then(response => {
                if (!response.ok) throw new Error('Không thể tải danh sách năm: ' + response.status);
                return response.json();
            })
            .then(years => {
                const yearFilter = document.getElementById('yearFilter');
                yearFilter.innerHTML = '<option value="">Tất cả</option>'; // Reset options
                years.forEach(year => {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    yearFilter.appendChild(option);
                });
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi tải danh sách năm:', error);
                hideLoading();
                alert('Không thể tải danh sách năm: ' + error.message);
            });
    }

    function loadHolidays() {
        showLoading();
        const year = document.getElementById('yearFilter').value;
        let url = '/api/holidaymanager';
        if (year) {
            url += `?year=${year}`;
        }

        fetch(url, { headers: { 'Accept': 'application/json' } })
            .then(response => {
                if (!response.ok) throw new Error('Không thể tải dữ liệu ngày lễ: ' + response.status);
                return response.json();
            })
            .then(data => {
                const tableBody = document.getElementById('holidayTableBody');
                tableBody.innerHTML = '';

                if (data.length === 0) {
                    const emptyRow = document.createElement('tr');
                    const emptyCell = document.createElement('td');
                    emptyCell.colSpan = 6;
                    emptyCell.className = 'px-4 py-8 text-center text-gray-500 italic';
                    emptyCell.textContent = 'Không có dữ liệu ngày lễ';
                    emptyRow.appendChild(emptyCell);
                    tableBody.appendChild(emptyRow);
                    hideLoading();
                    return;
                }

                data.forEach((holiday, index) => {
                    const row = document.createElement('tr');
                    row.className = index % 2 === 0 ? 'bg-white hover:bg-blue-50' : 'bg-blue-50 hover:bg-blue-100';

                    // Tên ngày lễ
                    const nameCell = document.createElement('td');
                    nameCell.className = 'px-4 py-3 text-sm text-gray-900 text-center';
                    nameCell.textContent = holiday.tenNgayLe;
                    row.appendChild(nameCell);

                    // Ngày lễ
                    const dateCell = document.createElement('td');
                    dateCell.className = 'px-4 py-3 text-sm text-gray-900 text-center';
                    dateCell.textContent = new Date(holiday.ngayLe1).toLocaleDateString('vi-VN');
                    row.appendChild(dateCell);

                    // Số ngày nghỉ
                    const dayCountCell = document.createElement('td');
                    dayCountCell.className = 'px-4 py-3 text-sm text-gray-900 text-center';
                    dayCountCell.textContent = holiday.soNgayNghi || '-';
                    row.appendChild(dayCountCell);

                    // Trạng thái
                    const statusCell = document.createElement('td');
                    statusCell.className = 'px-4 py-3 text-sm text-center';

                    let statusText = '';
                    let statusClass = '';

                    switch (holiday.trangThai) {
                        case 'NL1':
                            statusText = 'Ngày lễ thường';
                            statusClass = 'bg-blue-100 text-blue-800';
                            break;
                        case 'NL2':
                            statusText = 'Ngày lễ cuối tuần';
                            statusClass = 'bg-indigo-100 text-indigo-800';
                            break;
                        case 'NL3':
                            statusText = 'Ngày nghỉ bù';
                            statusClass = 'bg-cyan-100 text-cyan-800';
                            break;
                        case 'NL4':
                            statusText = 'Đã duyệt (có chấm công)';
                            statusClass = 'bg-emerald-100 text-emerald-800';
                            break;
                        case 'NL5':
                            statusText = 'Đã duyệt (không chấm công)';
                            statusClass = 'bg-teal-100 text-teal-800';
                            break;
                        case 'NL6':
                            statusText = 'Đã từ chối';
                            statusClass = 'bg-red-100 text-red-800';
                            break;
                        default:
                            statusText = holiday.trangThai || '-';
                            statusClass = 'bg-gray-100 text-gray-800';
                    }

                    const statusBadge = document.createElement('span');
                    statusBadge.className = `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}`;
                    statusBadge.textContent = statusText;
                    statusCell.appendChild(statusBadge);
                    row.appendChild(statusCell);

                    // Mô tả
                    const descCell = document.createElement('td');
                    descCell.className = 'px-4 py-3 text-sm text-gray-900 text-center';
                    descCell.textContent = holiday.moTa || '-';
                    row.appendChild(descCell);

                    // Hành động
                    const actionsCell = document.createElement('td');
                    actionsCell.className = 'px-4 py-3 text-sm text-center';

                    const buttonContainer = document.createElement('div');
                    buttonContainer.className = 'flex justify-center space-x-1';

                    const approveButton = document.createElement('button');
                    approveButton.className = 'inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200';
                    approveButton.innerHTML = '<i class="fas fa-check mr-1"></i> Duyệt';
                    approveButton.addEventListener('click', () => approveHoliday(holiday.maNgayLe));

                    const rejectButton = document.createElement('button');
                    rejectButton.className = 'inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-200';
                    rejectButton.innerHTML = '<i class="fas fa-times mr-1"></i> Từ chối';
                    rejectButton.addEventListener('click', () => rejectHoliday(holiday.maNgayLe));

                    const cancelButton = document.createElement('button');
                    cancelButton.className = 'inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors duration-200';
                    cancelButton.innerHTML = '<i class="fas fa-undo mr-1"></i> Hủy';
                    cancelButton.addEventListener('click', () => cancelHoliday(holiday.maNgayLe));

                    if (holiday.trangThai === 'NL4' || holiday.trangThai === 'NL5' || holiday.trangThai === 'NL6') {
                        approveButton.style.display = 'none';
                        rejectButton.style.display = 'none';
                    } else {
                        cancelButton.style.display = 'none';
                    }

                    buttonContainer.appendChild(approveButton);
                    buttonContainer.appendChild(rejectButton);
                    buttonContainer.appendChild(cancelButton);
                    actionsCell.appendChild(buttonContainer);
                    row.appendChild(actionsCell);

                    tableBody.appendChild(row);
                });

                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi tải dữ liệu ngày lễ:', error);
                const tableBody = document.getElementById('holidayTableBody');
                const errorRow = document.createElement('tr');
                const errorCell = document.createElement('td');
                errorCell.colSpan = 6;
                errorCell.className = 'px-4 py-4 text-center text-red-500';
                errorCell.textContent = `Không thể tải dữ liệu ngày lễ: ${error.message}`;
                errorRow.appendChild(errorCell);
                tableBody.innerHTML = '';
                tableBody.appendChild(errorRow);
                hideLoading();
            });
    }

    function approveHoliday(holidayId) {
        showLoading();
        fetch(`/api/holidaymanager/approve/${holidayId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
            .then(response => {
                if (!response.ok) throw new Error('Không thể duyệt ngày lễ: ' + response.status);
                return response.json();
            })
            .then(result => {
                alert(result.message);
                loadHolidays();
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi duyệt ngày lễ:', error);
                alert('Đã xảy ra lỗi khi duyệt ngày lễ: ' + error.message);
                hideLoading();
            });
    }

    function rejectHoliday(holidayId) {
        showLoading();
        fetch(`/api/holidaymanager/reject/${holidayId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
            .then(response => {
                if (!response.ok) throw new Error('Không thể từ chối ngày lễ: ' + response.status);
                return response.json();
            })
            .then(result => {
                alert(result.message);
                loadHolidays();
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi từ chối ngày lễ:', error);
                alert('Đã xảy ra lỗi khi từ chối ngày lễ: ' + error.message);
                hideLoading();
            });
    }

    function cancelHoliday(holidayId) {
        if (confirm('Bạn có chắc chắn muốn hủy ngày lễ này? Trạng thái sẽ chuyển về trạng thái ban đầu và tất cả chấm công liên quan sẽ bị xóa.')) {
            showLoading();
            fetch(`/api/holidaymanager/cancel/${holidayId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (!response.ok) throw new Error('Không thể hủy ngày lễ: ' + response.status);
                    return response.json();
                })
                .then(result => {
                    alert(result.message);
                    loadHolidays();
                    hideLoading();
                })
                .catch(error => {
                    console.error('Lỗi khi hủy ngày lễ:', error);
                    alert('Đã xảy ra lỗi khi hủy ngày lễ: ' + error.message);
                    hideLoading();
                });
        }
    }

    function approveAllHolidays() {
        const yearFilter = document.getElementById('yearFilter');
        const selectedYear = yearFilter.value;
        if (!selectedYear) {
            alert('Vui lòng chọn một năm để duyệt.');
            return;
        }

        if (confirm(`Bạn có chắc chắn muốn duyệt tất cả các ngày lễ chưa được duyệt trong năm ${selectedYear}?`)) {
            showLoading();
            fetch(`/api/holidaymanager/approve/year/${selectedYear}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (!response.ok) throw new Error('Không thể duyệt các ngày lễ: ' + response.status);
                    return response.json();
                })
                .then(result => {
                    alert(result.message);
                    loadHolidays();
                    hideLoading();
                })
                .catch(error => {
                    console.error('Lỗi khi duyệt tất cả ngày lễ:', error);
                    alert('Đã xảy ra lỗi khi duyệt các ngày lễ: ' + error.message);
                    hideLoading();
                });
        }
    }
</script>