@{
    ViewData["Title"] = "Quản lý ngày lễ";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<style>
    .card-header {
        background-color: #007bff;
        color: white;
        font-weight: bold;
    }

    .table th {
        background-color: #f8f9fa;
        text-align: center;
    }

    .table td {
        vertical-align: middle;
        text-align: center;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
    }

    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.3);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
</style>

<div class="container-fluid mt-4">
    <div class="card">
        <div class="card-header">
            <h3 class="mb-0"><i class="fas fa-calendar-alt me-2"></i>Quản lý ngày lễ</h3>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="yearFilter" class="form-label">Chọn năm:</label>
                    <select id="yearFilter" class="form-select" onchange="loadHolidays()">
                        <option value="">Tất cả</option>
                    </select>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="button" class="btn btn-success" onclick="approveAllHolidays()">
                        <i class="fas fa-check-circle me-1"></i>Duyệt tất cả theo năm
                    </button>
                </div>
                <div class="col-md-4 d-flex align-items-end justify-content-end">
                    <a href="/Holiday/Requests" class="btn btn-primary">
                        <i class="fas fa-list me-1"></i>Xem yêu cầu
                    </a>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Tên Ngày Lễ</th>
                            <th>Ngày Lễ</th>
                            <th>Số Ngày Nghỉ</th>
                            <th>Trạng Thái</th>
                            <th>Mô Tả</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="holidayTableBody"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Loading Spinner -->
<div class="spinner-overlay" id="loadingSpinner">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Đang tải...</span>
    </div>
</div>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        loadHolidayYears();
        loadHolidays();
    });

    function showLoading() {
        document.getElementById('loadingSpinner').style.display = 'flex';
    }

    function hideLoading() {
        document.getElementById('loadingSpinner').style.display = 'none';
    }

    function loadHolidayYears() {
        showLoading();
        fetch('/api/holidaymanager/years', { headers: { 'Accept': 'application/json' } })
            .then(response => {
                if (!response.ok) throw new Error('Không thể tải danh sách năm: ' + response.status);
                return response.json();
            })
            .then(years => {
                const yearFilter = document.getElementById('yearFilter');
                yearFilter.innerHTML = '<option value="">Tất cả</option>'; // Reset options
                years.forEach(year => {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    yearFilter.appendChild(option);
                });
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi tải danh sách năm:', error);
                hideLoading();
                alert('Không thể tải danh sách năm: ' + error.message);
            });
    }

    function loadHolidays() {
        showLoading();
        const year = document.getElementById('yearFilter').value;
        let url = '/api/holidaymanager';
        if (year) {
            url += `?year=${year}`;
        }

        fetch(url, { headers: { 'Accept': 'application/json' } })
            .then(response => {
                if (!response.ok) throw new Error('Không thể tải dữ liệu ngày lễ: ' + response.status);
                return response.json();
            })
            .then(data => {
                const tableBody = document.getElementById('holidayTableBody');
                tableBody.innerHTML = '';
                data.forEach(holiday => {
                    const row = tableBody.insertRow();
                    row.insertCell().textContent = holiday.tenNgayLe;
                    row.insertCell().textContent = new Date(holiday.ngayLe1).toLocaleDateString('vi-VN');
                    row.insertCell().textContent = holiday.soNgayNghi || '-';

                    let statusText = '';
                    switch(holiday.trangThai) {
                        case 'NL1':
                            statusText = 'Ngày lễ thường';
                            break;
                        case 'NL2':
                            statusText = 'Ngày lễ cuối tuần';
                            break;
                        case 'NL3':
                            statusText = 'Ngày nghỉ bù';
                            break;
                        case 'NL4':
                            statusText = 'Đã duyệt (có chấm công)';
                            break;
                        case 'NL5':
                            statusText = 'Đã duyệt (không chấm công)';
                            break;
                        case 'NL6':
                            statusText = 'Đã từ chối';
                            break;
                        default:
                            statusText = holiday.trangThai || '-';
                    }
                    row.insertCell().textContent = statusText;
                    row.insertCell().textContent = holiday.moTa || '-';

                    const actionsCell = row.insertCell();

                    const approveButton = document.createElement('button');
                    approveButton.innerHTML = '<i class="fas fa-check"></i> Duyệt';
                    approveButton.className = 'btn btn-success btn-sm me-1';
                    approveButton.addEventListener('click', () => approveHoliday(holiday.maNgayLe));

                    const rejectButton = document.createElement('button');
                    rejectButton.innerHTML = '<i class="fas fa-times"></i> Từ chối';
                    rejectButton.className = 'btn btn-danger btn-sm me-1';
                    rejectButton.addEventListener('click', () => rejectHoliday(holiday.maNgayLe));

                    const cancelButton = document.createElement('button');
                    cancelButton.innerHTML = '<i class="fas fa-undo"></i> Hủy';
                    cancelButton.className = 'btn btn-secondary btn-sm';
                    cancelButton.addEventListener('click', () => cancelHoliday(holiday.maNgayLe));

                    if (holiday.trangThai === 'NL4' || holiday.trangThai === 'NL5' || holiday.trangThai === 'NL6') {
                        approveButton.style.display = 'none';
                        rejectButton.style.display = 'none';
                    } else {
                        cancelButton.style.display = 'none';
                    }

                    actionsCell.appendChild(approveButton);
                    actionsCell.appendChild(rejectButton);
                    actionsCell.appendChild(cancelButton);
                });

                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi tải dữ liệu ngày lễ:', error);
                const tableBody = document.getElementById('holidayTableBody');
                tableBody.innerHTML = `<tr><td colspan="6" class="text-danger">Không thể tải dữ liệu ngày lễ: ${error.message}</td></tr>`;
                hideLoading();
            });
    }

    function approveHoliday(holidayId) {
        showLoading();
        fetch(`/api/holidaymanager/approve/${holidayId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
            .then(response => {
                if (!response.ok) throw new Error('Không thể duyệt ngày lễ: ' + response.status);
                return response.json();
            })
            .then(result => {
                alert(result.message);
                loadHolidays();
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi duyệt ngày lễ:', error);
                alert('Đã xảy ra lỗi khi duyệt ngày lễ: ' + error.message);
                hideLoading();
            });
    }

    function rejectHoliday(holidayId) {
        showLoading();
        fetch(`/api/holidaymanager/reject/${holidayId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
            .then(response => {
                if (!response.ok) throw new Error('Không thể từ chối ngày lễ: ' + response.status);
                return response.json();
            })
            .then(result => {
                alert(result.message);
                loadHolidays();
                hideLoading();
            })
            .catch(error => {
                console.error('Lỗi khi từ chối ngày lễ:', error);
                alert('Đã xảy ra lỗi khi từ chối ngày lễ: ' + error.message);
                hideLoading();
            });
    }

    function cancelHoliday(holidayId) {
        if (confirm('Bạn có chắc chắn muốn hủy ngày lễ này? Trạng thái sẽ chuyển về trạng thái ban đầu và tất cả chấm công liên quan sẽ bị xóa.')) {
            showLoading();
            fetch(`/api/holidaymanager/cancel/${holidayId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (!response.ok) throw new Error('Không thể hủy ngày lễ: ' + response.status);
                    return response.json();
                })
                .then(result => {
                    alert(result.message);
                    loadHolidays();
                    hideLoading();
                })
                .catch(error => {
                    console.error('Lỗi khi hủy ngày lễ:', error);
                    alert('Đã xảy ra lỗi khi hủy ngày lễ: ' + error.message);
                    hideLoading();
                });
        }
    }

    function approveAllHolidays() {
        const yearFilter = document.getElementById('yearFilter');
        const selectedYear = yearFilter.value;
        if (!selectedYear) {
            alert('Vui lòng chọn một năm để duyệt.');
            return;
        }

        if (confirm(`Bạn có chắc chắn muốn duyệt tất cả các ngày lễ chưa được duyệt trong năm ${selectedYear}?`)) {
            showLoading();
            fetch(`/api/holidaymanager/approve/year/${selectedYear}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (!response.ok) throw new Error('Không thể duyệt các ngày lễ: ' + response.status);
                    return response.json();
                })
                .then(result => {
                    alert(result.message);
                    loadHolidays();
                    hideLoading();
                })
                .catch(error => {
                    console.error('Lỗi khi duyệt tất cả ngày lễ:', error);
                    alert('Đã xảy ra lỗi khi duyệt các ngày lễ: ' + error.message);
                    hideLoading();
                });
        }
    }
</script>