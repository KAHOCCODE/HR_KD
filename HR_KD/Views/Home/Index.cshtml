@using HR_KD
@using HR_KD.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>HR Portal - @ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary-color: #2A5C8D;
            --secondary-color: #F5F7FA;
            --accent-color: #FF6B6B;
        }

        .dashboard-card {
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .dashboard-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.15);
            }

        .table-hover tbody tr:hover {
            background-color: var(--secondary-color);
        }

        .icon-menu {
            display: flex;
            justify-content: space-around;
            margin: 20px 0;
        }

        .icon-menu-item {
            text-align: center;
            cursor: pointer;
            padding: 15px;
            border-radius: 15px;
            transition: all 0.3s ease;
            background-color: #F0F0F0; /* Màu xám nhạt */
            width: 23%;
        }

            .icon-menu-item:hover {
                background-color: var(--primary-color); /* Màu chính khi hover */
                color: white;
                transform: scale(1.05);
            }

            .icon-menu-item.active {
                background-color: var(--primary-color); /* Màu chính khi active */
                color: white;
            }


            .icon-menu-item i {
                font-size: 2rem;
                margin-bottom: 10px;
            }

        .employee-info {
            background-color: white;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

            .employee-info h5 {
                color: var(--primary-color);
            }

        .chart-container {
            background-color: white;
            padding: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
    </style>
</head>

<body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary py-3">
        <div class="container">
            <a class="navbar-brand fw-bold" href="#">
                <i class="fas fa-user-clock me-2"></i>
                HR Portal
            </a>
            <div class="d-flex align-items-center">
                <span class="text-white me-3">Xin chào, Trương Minh Đức</span>
                <div class="dropdown">
                    <button class="btn btn-light btn-sm dropdown-toggle" type="button" id="profileMenu" data-bs-toggle="dropdown">
                        <i class="fas fa-user-circle"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="#"><i class="fas fa-cog me-2"></i>Cài đặt</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item text-danger" href="#"><i class="fas fa-sign-out-alt me-2"></i>Đăng xuất</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Employee Information -->
        <div class="employee-info">
            <h5>Thông tin nhân viên</h5>
            <div class="row">
                <div class="col-md-3">
                    <p><strong>Mã nhân viên:</strong> NV2100011740</p>
                </div>
                <div class="col-md-3">
                    <p><strong>Họ và Tên:</strong> Trương Minh Đức</p>
                </div>
                <div class="col-md-2">
                    <p><strong>Ngày sinh:</strong> 21/02/2003</p>
                </div>
                <div class="col-md-2">
                    <p><strong>Giới tính:</strong> Nam</p>
                </div>
                <div class="col-md-2">
                    <p><strong>Số điện thoại:</strong> 0123456789</p>
                </div>
                <div class="col-md-3">
                    <p><strong>Mã Phòng Ban:</strong> PB001</p>
                </div>
                <div class="col-md-3">
                    <p><strong>Mã chức vụ:</strong> CV001</p>
                </div>
            </div>
        </div>

        <!-- Icon Menu -->
        <div class="icon-menu">
            <div class="icon-menu-item" onclick="toggleSection('attendance')">
                <i class="fas fa-fingerprint"></i>
                <p>Chấm công</p>
            </div>
            <div class="icon-menu-item" onclick="toggleSection('leave')">
                <i class="fas fa-calendar-alt"></i>
                <p>Nghỉ phép</p>
            </div>
            <div class="icon-menu-item" onclick="toggleSection('history')">
                <i class="fas fa-history"></i>
                <p>Lịch sử</p>
            </div>
            <div class="icon-menu-item" onclick="toggleSection('statistics')">
                <i class="fas fa-chart-bar"></i>
                <p>Thống kê</p>
            </div>
        </div>

        <!-- Attendance Section -->
<div id="attendanceSection" class="dashboard-card bg-white p-4">
    <h5 class="mb-4 text-primary"><i class="fas fa-fingerprint me-2"></i>Chấm công</h5>
    <div class="mb-3">
        <label class="form-label">Chọn chế độ chấm công</label>
        <select class="form-select mb-3" id="attendanceMode" onchange="toggleAttendanceMode()">
            <option value="daily">Theo ngày</option>
        </select>
    </div>

    <div id="dailyMode" class="mb-3">
        <label class="form-label">Chọn khoảng ngày</label>
        <input type="text" class="form-control date-range" id="attendanceDateRange" placeholder="Chọn khoảng ngày">
        <div class="row mt-3">
                    <div class="col-md-6">
                        <label class="form-label">Giờ check-in</label>
                        <input type="time" class="form-control" id="checkInTime">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Giờ check-out</label>
                        <input type="time" class="form-control" id="checkOutTime">
                    </div>
                </div>
         </div>
         <!-- Hiển thị tổng giờ -->
        <div class="mt-3">
            <label class="form-label">Tổng giờ làm</label>
            <input type="text" class="form-control" id="totalHours" readonly>
        </div>

</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
document.getElementById("checkInTime").addEventListener("input", calculateTotalHours);
document.getElementById("checkOutTime").addEventListener("input", calculateTotalHours);

function calculateTotalHours() {
    const checkIn = document.getElementById("checkInTime").value;
    const checkOut = document.getElementById("checkOutTime").value;
    const totalHoursInput = document.getElementById("totalHours");

    if (checkIn && checkOut) {
        const checkInTime = new Date(`2000-01-01T${checkIn}`);
        const checkOutTime = new Date(`2000-01-01T${checkOut}`);

        if (checkOutTime > checkInTime) {
            const diffMs = checkOutTime - checkInTime;
            let diffHours = diffMs / (1000 * 60 * 60); // Đổi sang giờ

            // Nếu tổng giờ làm lớn hơn 4 thì trừ đi 1 giờ nghỉ trưa
            if (diffHours > 4) {
                diffHours -= 1;
            }

            totalHoursInput.value = diffHours.toFixed(2) + " giờ";
        } else {
            totalHoursInput.value = "Giờ check-out phải lớn hơn giờ check-in";
        }
    } else {
        totalHoursInput.value = "";
    }
}


// Cấu hình Flatpickr
const dateRangePicker = flatpickr("#attendanceDateRange", {
    mode: "range",
    dateFormat: "Y-m-d",
    locale: "vn"
});
document.getElementById("datePicker").addEventListener("input", function() {
            let date = new Date(this.value);
            if (date.getDay() === 0) { // 0 là Chủ Nhật
                alert("Không được chọn Chủ Nhật. Vui lòng chọn ngày từ Thứ Hai đến Thứ Bảy.");
                this.value = ""; // Xóa giá trị đã chọn
            }
        });

// Danh sách ngày lễ 2025 (cập nhật theo từng năm)
const publicHolidays = [
    '2025-01-01', // Tết Dương lịch
    '2025-01-29', '2025-01-30', '2025-01-31', // Tết Nguyên Đán
    '2025-04-30', // Ngày Giải phóng
    '2025-05-01', // Quốc tế Lao động
    '2025-09-02'  // Quốc khánh
];

function isHoliday(date) {
    const dateString = date.toISOString().split('T')[0];
    return publicHolidays.includes(dateString);
}

function updateWorkingDays(selectedDate) {
    const startDate = new Date(selectedDate);
    // Đảm bảo luôn bắt đầu từ Thứ 2
    startDate.setDate(startDate.getDate() - (startDate.getDay() === 0 ? 6 : startDate.getDay() - 1));

    const workingDays = [];
    for(let i = 0; i < 6; i++) { // Lặp 6 ngày từ Thứ 2 đến Thứ 7
        const currentDate = new Date(startDate);
        currentDate.setDate(startDate.getDate() + i);

        if(!isHoliday(currentDate)) {
            workingDays.push(currentDate.toISOString().split('T')[0]);
        }
    }

    document.getElementById('workingDaysList').innerHTML = `
        <p class="text-muted small mb-1">Các ngày làm việc trong tuần:</p>
        <div class="d-flex gap-2 flex-wrap">
            ${workingDays.map(date => `
                <span class="badge bg-primary">${formatDate(date)}</span>
            `).join('')}
        </div>
    `;
}

// Hàm định dạng ngày tháng
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('vi-VN', {
        weekday: 'long',
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
    });
}

function toggleAttendanceMode() {
    const mode = document.getElementById('attendanceMode').value;
    document.getElementById('dailyMode').style.display = mode === 'daily' ? 'block' : 'none';
    document.getElementById('weeklyMode').style.display = mode === 'weekly' ? 'block' : 'none';
}

</script>



            <div id="attendanceStatus" class="mb-3">
                <p class="text-muted">Trạng thái hiện tại: <span class="fw-bold text-success">Đang làm việc</span></p>
            </div>
            <button class="btn btn-primary w-100" onclick="checkInOut()">
                <i class="fas fa-check-circle me-2"></i>
                <span id="checkBtnText">Check-in</span>
            </button>
            <div class="mt-3 text-center">
                <small class="text-muted" id="lastCheckTime">Lần cuối: 08:00 04/03/2025</small>
            </div>
        </div>

        <!-- Leave Section -->
        <div id="leaveSection" class="dashboard-card bg-white p-4" style="display: none;">
            <h5 class="mb-4 text-primary"><i class="fas fa-calendar-alt me-2"></i>Đăng ký nghỉ phép</h5>
            <form id="leaveForm">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Loại nghỉ phép</label>
                        <select class="form-select" required>
                            <option value="">Chọn loại nghỉ</option>
                            <option>Nghỉ phép năm</option>
                            <option>Nghỉ ốm</option>
                            <option>Nghỉ việc riêng</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Từ ngày</label>
                        <input type="date" class="form-control" required>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Đến ngày</label>
                        <input type="date" class="form-control" required>
                    </div>
                    <div class="col-12">
                        <label class="form-label">Lý do</label>
                        <textarea class="form-control" rows="3" placeholder="Nhập lý do..." required></textarea>
                    </div>
                    <div class="col-12">
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-paper-plane me-2"></i>Gửi yêu cầu
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Giao diện lịch sử -->
        <div id="historySection" class="dashboard-card bg-white p-4" style="display: none;">
            <h5 class="mb-4 text-primary"><i class="fas fa-history me-2"></i>Lịch sử</h5>
            <div class="mb-3">
                <button class="btn btn-outline-primary me-2" onclick="showAttendanceHistory()">Lịch sử chấm công</button>
                <button class="btn btn-outline-primary" onclick="showLeaveHistory()">Lịch sử nghỉ phép</button>
            </div>

            <!-- Lịch sử chấm công -->
            <div id="attendanceHistorySection">
                <div class="mb-3">
                    <label class="form-label">Lọc theo thời gian</label>
                    <select class="form-select" id="filterHistory" onchange="filterAttendanceHistory()">
                        <option value="all">Tất cả</option>
                        <option value="thisWeek">Tuần này</option>
                        <option value="thisMonth">Tháng này</option>
                    </select>
                </div>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Ngày/Tuần</th>
                            <th>Check-in</th>
                            <th>Check-out</th>
                            <th>Tổng thời gian</th>
                            <th>Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody id="attendanceHistory">
                        <!-- Dữ liệu sẽ được thêm bằng JavaScript -->
                    </tbody>
                </table>
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center" id="pagination">
                        <!-- Các nút phân trang sẽ được thêm bằng JavaScript -->
                    </ul>
                </nav>
            </div>

            <!-- Lịch sử nghỉ phép -->
            <div id="leaveHistorySection" style="display: none;">
                <div class="mb-3">
                    <label class="form-label">Lọc theo thời gian</label>
                    <select class="form-select" id="filterLeaveHistory" onchange="filterLeaveHistory()">
                        <option value="all">Tất cả</option>
                        <option value="thisWeek">Tuần này</option>
                        <option value="thisMonth">Tháng này</option>
                    </select>
                </div>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Loại nghỉ</th>
                            <th>Từ ngày</th>
                            <th>Đến ngày</th>
                            <th>Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody id="leaveHistory">
                        <!-- Dữ liệu sẽ được thêm bằng JavaScript -->
                    </tbody>
                </table>
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center" id="leavePagination">
                        <!-- Các nút phân trang sẽ được thêm bằng JavaScript -->
                    </ul>
                </nav>
            </div>
        </div>


        <!-- Statistics Section -->
        <div id="statisticsSection" class="chart-container" style="display: none;">
            <h5 class="mb-4 text-primary"><i class="fas fa-chart-bar me-2"></i>Thống kê làm việc</h5>
            <canvas id="workChart"></canvas>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Hàm đặt lại màu hover của Icon menu
        function resetIconMenu() {
            const icons = ['attendance', 'leave', 'history', 'statistics']; // Tương ứng với các icon menu
            icons.forEach(icon => {
                const iconElement = document.querySelector(`.icon-menu-item[onclick="toggleSection('${icon}')"]`);
                iconElement.classList.remove('active'); // Xóa lớp active
            });
        }

        // Toggle sections and highlight active icon
        function toggleSection(sectionId) {
            const sections = ['attendanceSection', 'leaveSection', 'historySection', 'leaveHistorySection', 'statisticsSection'];
            const icons = ['attendance', 'leave', 'history', 'statistics']; // Tương ứng với các icon menu

            // Ẩn/hiển thị các section
            sections.forEach(section => {
                if (section === sectionId + 'Section') {
                    const sectionElement = document.getElementById(section);
                    if (sectionElement.style.display === 'none') {
                        sectionElement.style.display = 'block'; // Hiển thị section
                    } else {
                        sectionElement.style.display = 'none'; // Ẩn section
                        resetIconMenu(); // Đặt lại màu hover khi đóng section
                    }
                } else {
                    document.getElementById(section).style.display = 'none';
                }
            });

            // Thêm lớp active vào icon được chọn và xóa khỏi các icon khác
            icons.forEach(icon => {
                const iconElement = document.querySelector(`.icon-menu-item[onclick="toggleSection('${icon}')"]`);
                if (icon === sectionId && document.getElementById(sectionId + 'Section').style.display === 'block') {
                    iconElement.classList.add('active');
                } else {
                    iconElement.classList.remove('active');
                }
            });
        }



        // Xử lý chấm công
        function checkInOut() {
            const btn = $('#checkBtnText');
            const status = $('#attendanceStatus');
            const time = $('#lastCheckTime');

            if (btn.text() === 'Check-in') {
                btn.text('Check-out');
                status.html('<p class="text-muted">Trạng thái hiện tại: <span class="fw-bold text-danger">Đã kết thúc</span></p>');
                time.text('Lần cuối: ' + new Date().toLocaleString());
            } else {
                btn.text('Check-in');
                status.html('<p class="text-muted">Trạng thái hiện tại: <span class="fw-bold text-success">Đang làm việc</span></p>');
                time.text('Lần cuối: ' + new Date().toLocaleString());
            }
        }

        // Hiển thị giao diện chấm công theo ngày/tuần
        function toggleAttendanceMode() {
            const mode = $('#attendanceMode').val();
            if (mode === 'daily') {
                $('#dailyMode').show();
                $('#weeklyMode').hide();
                $('#checkBtnText').text('Check-in'); // Đổi lại nút thành Check-in
            } else {
                $('#dailyMode').hide();
                $('#weeklyMode').show();
                $('#checkBtnText').text('Submit'); // Đổi nút thành Submit
            }
        }

        // Xử lý khi nhấn nút Submit trong chế độ tuần
        function checkInOut() {
            const mode = $('#attendanceMode').val();
            if (mode === 'weekly') {
                const week = $('#attendanceWeek').val();
                const checkInTime = $('#checkInTime').val();
                const checkOutTime = $('#checkOutTime').val();

                if (!week || !checkInTime || !checkOutTime) {
                    alert('Vui lòng điền đầy đủ thông tin!');
                    return;
                }

                // Thêm dữ liệu vào lịch sử chấm công
                const status = checkOutTime ? 'Hoàn thành' : 'Thiếu check-out';
                $('#attendanceHistory').append(`
                    <tr>
                        <td>${week}</td>
                        <td>${checkInTime}</td>
                        <td>${checkOutTime}</td>
                        <td>${calculateTotalTime(checkInTime, checkOutTime)}</td>
                        <td>${status}</td>
                    </tr>
                `);

                alert('Đã gửi thông tin chấm công tuần thành công!');
            } else {
                // Xử lý chấm công theo ngày
                const btn = $('#checkBtnText');
                const status = $('#attendanceStatus');
                const time = $('#lastCheckTime');

                if (btn.text() === 'Check-in') {
                    btn.text('Check-out');
                    status.html('<p class="text-muted">Trạng thái hiện tại: <span class="fw-bold text-danger">Đã kết thúc</span></p>');
                    time.text('Lần cuối: ' + new Date().toLocaleString());
                } else {
                    btn.text('Check-in');
                    status.html('<p class="text-muted">Trạng thái hiện tại: <span class="fw-bold text-success">Đang làm việc</span></p>');
                    time.text('Lần cuối: ' + new Date().toLocaleString());
                }
            }
        }

        // Hàm tính tổng thời gian làm việc
        function calculateTotalTime(checkInTime, checkOutTime) {
            if (!checkInTime || !checkOutTime) return 'N/A';
            const [inHour, inMinute] = checkInTime.split(':').map(Number);
            const [outHour, outMinute] = checkOutTime.split(':').map(Number);
            const totalMinutes = (outHour * 60 + outMinute) - (inHour * 60 + inMinute);
            const hours = Math.floor(totalMinutes / 60);
            const minutes = totalMinutes % 60;
            return `${hours} giờ ${minutes} phút`;
        }


        // Dữ liệu lịch sử chấm công (giả lập)
        let attendanceData = [
            { date: '04/03/2025', checkIn: '08:00', checkOut: '17:00', total: '9 giờ', status: 'Hoàn thành' },
            { date: '03/03/2025', checkIn: '08:30', checkOut: '17:30', total: '9 giờ', status: 'Hoàn thành' },
            { date: '02/03/2025', checkIn: '09:00', checkOut: '18:00', total: '9 giờ', status: 'Hoàn thành' },
            { date: '01/03/2025', checkIn: '08:45', checkOut: '17:45', total: '9 giờ', status: 'Hoàn thành' },
            { date: '28/02/2025', checkIn: '08:15', checkOut: '17:15', total: '9 giờ', status: 'Hoàn thành' },
            { date: '27/02/2025', checkIn: '08:00', checkOut: '17:00', total: '9 giờ', status: 'Hoàn thành' },
        ];

        // Hiển thị dữ liệu lịch sử chấm công
        function renderAttendanceHistory(data, page = 1, pageSize = 5) {
            const start = (page - 1) * pageSize;
            const end = start + pageSize;
            const paginatedData = data.slice(start, end);

            $('#attendanceHistory').empty();
            paginatedData.forEach(item => {
                $('#attendanceHistory').append(`
                    <tr>
                        <td>${item.date}</td>
                        <td>${item.checkIn}</td>
                        <td>${item.checkOut}</td>
                        <td>${item.total}</td>
                        <td>${item.status}</td>
                    </tr>
                `);
            });

            // Tạo phân trang
            renderPagination(data.length, page, pageSize);
        }

        // Tạo phân trang
        function renderPagination(totalItems, currentPage, pageSize) {
            const totalPages = Math.ceil(totalItems / pageSize);
            $('#pagination').empty();

            for (let i = 1; i <= totalPages; i++) {
                $('#pagination').append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                    </li>
                `);
            }
        }

        // Chuyển trang
        function changePage(page) {
            renderAttendanceHistory(attendanceData, page);
        }

        // Lọc dữ liệu lịch sử chấm công
        function filterAttendanceHistory() {
            const filter = $('#filterHistory').val();
            let filteredData = attendanceData;

            if (filter === 'thisWeek') {
                filteredData = attendanceData.filter(item => {
                    const itemDate = new Date(item.date.split('/').reverse().join('-'));
                    const today = new Date();
                    const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));
                    const endOfWeek = new Date(today.setDate(today.getDate() + 6));
                    return itemDate >= startOfWeek && itemDate <= endOfWeek;
                });
            } else if (filter === 'thisMonth') {
                filteredData = attendanceData.filter(item => {
                    const itemDate = new Date(item.date.split('/').reverse().join('-'));
                    const today = new Date();
                    return itemDate.getMonth() === today.getMonth() && itemDate.getFullYear() === today.getFullYear();
                });
            }

            renderAttendanceHistory(filteredData);
        }

        // Khởi tạo lịch sử chấm công
        renderAttendanceHistory(attendanceData);

        // Dữ liệu lịch sử nghỉ phép (giả lập)
        let leaveData = [
            { type: 'Nghỉ phép năm', from: '01/03/2025', to: '03/03/2025', status: 'Đã duyệt' },
            { type: 'Nghỉ ốm', from: '28/02/2025', to: '28/02/2025', status: 'Đã duyệt' },
            { type: 'Nghỉ việc riêng', from: '25/02/2025', to: '26/02/2025', status: 'Đã duyệt' },
            { type: 'Nghỉ phép năm', from: '20/02/2025', to: '22/02/2025', status: 'Đã duyệt' },
            { type: 'Nghỉ ốm', from: '15/02/2025', to: '16/02/2025', status: 'Đã duyệt' },
            { type: 'Nghỉ việc riêng', from: '10/02/2025', to: '12/02/2025', status: 'Đã duyệt' },
        ];

        // Hiển thị dữ liệu lịch sử nghỉ phép
        function renderLeaveHistory(data, page = 1, pageSize = 5) {
            const start = (page - 1) * pageSize;
            const end = start + pageSize;
            const paginatedData = data.slice(start, end);

            $('#leaveHistory').empty();
            paginatedData.forEach(item => {
                $('#leaveHistory').append(`
                    <tr>
                        <td>${item.type}</td>
                        <td>${item.from}</td>
                        <td>${item.to}</td>
                        <td>${item.status}</td>
                    </tr>
                `);
            });

            // Tạo phân trang
            renderLeavePagination(data.length, page, pageSize);
        }

        // Tạo phân trang cho lịch sử nghỉ phép
        function renderLeavePagination(totalItems, currentPage, pageSize) {
            const totalPages = Math.ceil(totalItems / pageSize);
            $('#leavePagination').empty();

            for (let i = 1; i <= totalPages; i++) {
                $('#leavePagination').append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changeLeavePage(${i})">${i}</a>
                    </li>
                `);
            }
        }

        // Chuyển trang cho lịch sử nghỉ phép
        function changeLeavePage(page) {
            renderLeaveHistory(leaveData, page);
        }

        // Lọc dữ liệu lịch sử nghỉ phép
        function filterLeaveHistory() {
            const filter = $('#filterLeaveHistory').val();
            let filteredData = leaveData;

            if (filter === 'thisWeek') {
                filteredData = leaveData.filter(item => {
                    const fromDate = new Date(item.from.split('/').reverse().join('-'));
                    const today = new Date();
                    const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));
                    const endOfWeek = new Date(today.setDate(today.getDate() + 6));
                    return fromDate >= startOfWeek && fromDate <= endOfWeek;
                });
            } else if (filter === 'thisMonth') {
                filteredData = leaveData.filter(item => {
                    const fromDate = new Date(item.from.split('/').reverse().join('-'));
                    const today = new Date();
                    return fromDate.getMonth() === today.getMonth() && fromDate.getFullYear() === today.getFullYear();
                });
            }

            renderLeaveHistory(filteredData);
        }

        // Khởi tạo lịch sử nghỉ phép
        renderLeaveHistory(leaveData);


        // Thống kê biểu đồ
        const ctx = document.getElementById('workChart').getContext('2d');
        const workChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Tháng 1', 'Tháng 2', 'Tháng 3'],
                datasets: [{
                    label: 'Ngày làm việc',
                    data: [20, 18, 22],
                    backgroundColor: 'rgba(42, 92, 141, 0.8)',
                }, {
                    label: 'Ngày nghỉ phép',
                    data: [2, 3, 1],
                    backgroundColor: 'rgba(255, 107, 107, 0.8)',
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        // Hiển thị giao diện lịch sử chấm công
        function showAttendanceHistory() {
            $('#attendanceHistorySection').show();
            $('#leaveHistorySection').hide();
        }

        // Hiển thị giao diện lịch sử nghỉ phép
        function showLeaveHistory() {
            $('#attendanceHistorySection').hide();
            $('#leaveHistorySection').show();
        }

        // Khởi tạo mặc định hiển thị lịch sử chấm công
        showAttendanceHistory();

    </script>
<!-- CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</body>
</html>
