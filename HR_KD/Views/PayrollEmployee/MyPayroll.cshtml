@{
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
    ViewData["Title"] = "Bảng lương cá nhân";
    ViewBag.ShowDownloadPdf = true;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="container py-8 max-w-7xl mx-auto">
    <h2 class="text-3xl font-bold text-gray-800 mb-6 flex items-center">
        <i class="fas fa-wallet mr-3 text-indigo-600"></i> Bảng lương cá nhân
    </h2>
    <div id="myPayrollContainer" class="space-y-6"></div>
    <div id="pdfViewerContainer" class="w-full h-[500px] border border-gray-200 rounded-lg shadow-sm overflow-auto hidden">
        <canvas id="pdfViewer" class="w-full h-full"></canvas>
    </div>
</div>

@await Html.PartialAsync("_PayrollDetailModal", new { ShowDownloadPdf = true })

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script>

    <script>
        $(document).ready(function () {
            loadMyPayrolls();
        });

        function showPayrollDetail(maLuong, showDownloadPdf = false) {
            Swal.fire({
                title: 'Đang tải...',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            $.get(`/api/PayrollApi/GetPayrollDetail/${maLuong}`, function (data) {
                Swal.close();
                console.log('Payroll Detail Response:', data); // Debug log
                if (!data.thuNhap || !data.khauTru) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Dữ liệu bảng lương không đầy đủ.',
                        showConfirmButton: true,
                        timer: 3000,
                        timerProgressBar: true
                    });
                    return;
                }
                const html = `
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h6 class="font-semibold text-indigo-600 mb-3 text-lg">Thông tin nhân viên</h6>
                                    <div class="mb-2 text-sm"><strong>Mã lương:</strong> ${data.maLuong}</div>
                                    <div class="mb-2 text-sm"><strong>Mã NV:</strong> ${data.maNv}</div>
                                    <div class="mb-2 text-sm"><strong>Họ tên:</strong> ${data.hoTen}</div>
                                    <div class="mb-2 text-sm"><strong>Giới tính:</strong> ${data.gioiTinh}</div>
                                    <div class="mb-2 text-sm"><strong>Phòng ban:</strong> ${data.phongBan}</div>
                                    <div class="mb-2 text-sm"><strong>Chức vụ:</strong> ${data.chucVu}</div>
                                    <div class="mb-2 text-sm"><strong>Loại hợp đồng:</strong> ${data.loaiHopDong}</div>
                                    <div class="mb-2 text-sm"><strong>Tháng lương:</strong> ${new Date(data.thangNam).toLocaleDateString('vi-VN', { month: 'long', year: 'numeric' })}</div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h6 class="font-semibold text-indigo-600 mb-3 text-lg">Thu nhập</h6>
                                    <div class="mb-2 text-sm"><strong>Lương cơ bản:</strong> ${formatCurrency(data.thuNhap.luongCoBan)}</div>
                                    <div class="mb-2 text-sm"><strong>Phụ cấp cố định:</strong> ${formatCurrency(data.thuNhap.phuCapCoDinh)}</div>
                                    <div class="mb-2 text-sm"><strong>Thưởng cố định:</strong> ${formatCurrency(data.thuNhap.thuongCoDinh)}</div>
                                    <div class="mb-2 text-sm"><strong>Phụ cấp thêm:</strong> ${formatCurrency(data.thuNhap.phuCapThem)}</div>
                                    <div class="mb-2 text-sm"><strong>Lương thêm:</strong> ${formatCurrency(data.thuNhap.luongThem)}</div>
                                    <div class="mb-2 text-sm"><strong>Lương tăng ca:</strong> ${formatCurrency(data.thuNhap.luongTangCa)}</div>
                                    <div class="mb-2 text-sm font-bold"><strong>Tổng lương:</strong> ${formatCurrency(data.thuNhap.tongLuong)}</div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h6 class="font-semibold text-indigo-600 mb-3 text-lg">Khấu trừ</h6>
                                    <div class="mb-2 text-sm"><strong>BHXH:</strong> <span class="text-red-600">-${formatCurrency(data.khauTru.bhxh)}</span></div>
                                    <div class="mb-2 text-sm"><strong>BHYT:</strong> <span class="text-red-600">-${formatCurrency(data.khauTru.bhyt)}</span></div>
                                    <div class="mb-2 text-sm"><strong>BHTN:</strong> <span class="text-red-600">-${formatCurrency(data.khauTru.bhtn)}</span></div>
                                    <div class="mb-2 text-sm"><strong>Thuế TNCN:</strong> <span class="text-red-600">-${formatCurrency(data.khauTru.thueTNCN)}</span></div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h6 class="font-semibold text-indigo-600 mb-3 text-lg">Thực nhận & Tài khoản</h6>
                                    <div class="mb-2 text-sm font-bold"><strong>Thực nhận:</strong> <span class="text-green-600">${formatCurrency(data.thucNhan)}</span></div>
                                    ${data.taiKhoanNganHang ? `
                                    <div class="mb-2 text-sm"><strong>Ngân hàng:</strong> ${data.taiKhoanNganHang.tenNganHang}</div>
                                    <div class="mb-2 text-sm"><strong>Chi nhánh:</strong> ${data.taiKhoanNganHang.chiNhanh}</div>
                                    <div class="mb-2 text-sm"><strong>Số tài khoản:</strong> ${data.taiKhoanNganHang.soTaiKhoan}</div>
                                    ` : '<div class="mb-2 text-sm"><strong>Tài khoản:</strong> Chưa có thông tin</div>'}
                                </div>
                            </div>
                            ${data.ghiChu ? `<div class="mt-4 text-sm"><strong>Ghi chú:</strong> <p class="italic text-gray-600">${data.ghiChu}</p></div>` : ''}
                            <div class="mt-4 text-sm"><strong>Trạng thái:</strong> <span class="${getStatusClass(data.trangThai)}">${getStatusIcon(data.trangThai)}${data.tenTrangThai}</span></div>
                        `;
                $('#payrollDetailContent').html(html);

                // Show PDF buttons
                if (showDownloadPdf) {
                    $('#downloadPdfButton').attr('href', `/api/PayrollEmployeeApi/CreatePayrollDetailReport/${data.maLuong}`);
                    $('#downloadPdfButton').show();
                    $('#viewPayrollBtn').attr('onclick', `viewPayrollReport(${data.maLuong})`);
                    $('#viewPayrollBtn').show();
                } else {
                    $('#downloadPdfButton').hide();
                    $('#viewPayrollBtn').hide();
                }

                // Show action buttons for BL1 status
                console.log('Payroll Status:', data.trangThai); // Debug log
                if (data.trangThai === 'BL1') {
                    console.log('Adding BL1 action buttons');
                    $('#actionButtons').html(`
                                <button class="inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm" onclick="confirmPayroll(${data.maLuong})">
                                    <i class="fas fa-check mr-2"></i> Xác nhận
                                </button>
                                <button class="inline-flex items-center px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm" onclick="rejectPayroll(${data.maLuong})">
                                    <i class="fas fa-edit mr-2"></i> Yêu cầu chỉnh sửa
                                </button>
                            `);
                } else {
                    $('#actionButtons').html('');
                }

                const modal = new bootstrap.Modal(document.getElementById('payrollDetailModal'), { backdrop: 'static' });
                modal.show();
            }).fail(function (xhr) {
                Swal.close();
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi!',
                    text: xhr.responseText || 'Không thể tải chi tiết bảng lương.',
                    showConfirmButton: true,
                    timer: 3000,
                    timerProgressBar: true
                });
                console.error("Lỗi tải chi tiết bảng lương:", xhr);
            });
        }

        function confirmPayroll(maLuong) {
            Swal.fire({
                title: 'Xác nhận bảng lương?',
                text: 'Bạn có chắc chắn muốn xác nhận bảng lương này? Sau khi xác nhận, bạn sẽ không thể chỉnh sửa.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: '<i class="fas fa-check mr-2"></i> Xác nhận',
                cancelButtonText: '<i class="fas fa-times mr-2"></i> Hủy',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm mr-2',
                    cancelButton: 'inline-flex items-center px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm'
                },
                showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#actionButtons button').prop('disabled', true);
                    $.post(`/api/PayrollEmployeeApi/ConfirmPayroll/${maLuong}`, function (response) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: response,
                            showConfirmButton: true,
                            timer: 2000,
                            timerProgressBar: true,
                            showClass: {
                                popup: 'animate__animated animate__bounceIn'
                            }
                        }).then(() => {
                            const modal = bootstrap.Modal.getInstance(document.getElementById('payrollDetailModal'));
                            modal.hide();
                            loadMyPayrolls();
                        });
                    }).fail(function (xhr) {
                        $('#actionButtons button').prop('disabled', false);
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: xhr.responseText || 'Đã xảy ra lỗi khi xác nhận.',
                            showConfirmButton: true,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    });
                }
            });
        }

        function rejectPayroll(maLuong) {
            Swal.fire({
                title: 'Gửi yêu cầu điều chỉnh',
                input: 'textarea',
                inputLabel: 'Lý do điều chỉnh:',
                inputPlaceholder: 'Nhập lý do bạn muốn điều chỉnh...',
                showCancelButton: true,
                confirmButtonText: '<i class="fas fa-paper-plane mr-2"></i> Gửi',
                cancelButtonText: '<i class="fas fa-times mr-2"></i> Hủy',
                buttonsStyling: false,
                customClass: {
                    confirmButton: 'inline-flex items-center px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm mr-2',
                    cancelButton: 'inline-flex items-center px-4 py-2 bg-gray-500 hover:bg-gray-600 text-white text-sm font-medium rounded-md transition duration-150 ease-in-out shadow-sm'
                },
                inputValidator: (value) => {
                    if (!value) {
                        return 'Bạn cần nhập lý do để gửi yêu cầu điều chỉnh!';
                    }
                },
                showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                }
            }).then((result) => {
                if (result.isConfirmed && result.value) {
                    const lyDo = result.value;
                    $('#actionButtons button').prop('disabled', true);
                    $.ajax({
                        url: `/api/PayrollEmployeeApi/RejectPayroll/${maLuong}`,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(lyDo),
                        success: function (response) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: response,
                                showConfirmButton: true,
                                timer: 2000,
                                timerProgressBar: true,
                                showClass: {
                                    popup: 'animate__animated animate__bounceIn'
                                }
                            }).then(() => {
                                const modal = bootstrap.Modal.getInstance(document.getElementById('payrollDetailModal'));
                                modal.hide();
                                loadMyPayrolls();
                            });
                        },
                        error: function (xhr) {
                            $('#actionButtons button').prop('disabled', false);
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: xhr.responseText || 'Đã xảy ra lỗi khi gửi yêu cầu.',
                                showConfirmButton: true,
                                timer: 3000,
                                timerProgressBar: true
                            });
                        }
                    });
                }
            });
        }

        function viewPayrollReport(maLuong) {
            const pdfUrl = `/api/PayrollEmployeeApi/CreatePayrollDetailReport/${maLuong}`;
            showPDF(pdfUrl);
        }

        function showPDF(pdfUrl) {
            const pdfViewerContainer = document.getElementById('pdfViewerContainer');
            const canvas = document.getElementById('pdfViewer');
            const ctx = canvas.getContext('2d');
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            pdfViewerContainer.classList.remove('hidden');
            pdfjsLib.getDocument(pdfUrl).promise.then(function (pdfDoc_) {
                pdfDoc = pdfDoc_;
                renderPage(1);
            }).catch(function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi!',
                    text: 'Không thể tải PDF bảng lương.',
                    showConfirmButton: true,
                    timer: 3000,
                    timerProgressBar: true
                });
                console.error("Lỗi tải PDF:", error);
            });
        }

        let pdfDoc = null;
        let pageNum = 1;
        let pageRendering = false;
        let pageNumPending = null;
        const scale = 1.5;

        function renderPage(num) {
            pageRendering = true;
            pdfDoc.getPage(num).then(function (page) {
                const viewport = page.getViewport({ scale: scale });
                const canvas = document.getElementById('pdfViewer');
                canvas.height = viewport.height;
                canvas.width = viewport.width;
                const ctx = canvas.getContext('2d');
                const renderContext = {
                    canvasContext: ctx,
                    viewport: viewport
                };
                const renderTask = page.render(renderContext);
                renderTask.promise.then(function () {
                    pageRendering = false;
                    if (pageNumPending !== null) {
                        renderPage(pageNumPending);
                        pageNumPending = null;
                    }
                });
            });
        }

        function formatCurrency(amount) {
            if (amount == null) return '0 VND';
            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
        }

        function loadMyPayrolls() {
            $.get('/api/PayrollEmployeeApi/MyPayroll', function (response) {
                let html = '';
                if (response.hasPayroll) {
                    response.data.forEach(yearData => {
                        html += `<div class="bg-white shadow-lg rounded-lg p-6 mb-6">
                                    <h3 class="text-xl font-semibold text-indigo-700 mb-4 flex items-center">
                                        <i class="far fa-calendar-alt mr-2 text-indigo-600"></i> Năm ${yearData.year}
                                    </h3>
                                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">`;
                        yearData.months.forEach(monthData => {
                            const statusClass = getStatusClass(monthData.trangThai);
                            const statusIcon = getStatusIcon(monthData.trangThai);
                            html += `<div class="bg-gray-50 rounded-lg border border-gray-200 p-4 flex flex-col justify-between h-48 transition duration-150 ease-in-out hover:shadow-md">
                                        <div>
                                            <div class="font-semibold text-gray-800 text-base">${monthData.displayMonthYear}</div>
                                            <div class="text-sm text-gray-600 mt-1">Trạng thái: <span class="${statusClass}">${statusIcon}${monthData.tenTrangThai}</span></div>
                                            <div class="text-sm text-gray-600 mt-1">Tổng lương: ${formatCurrency(monthData.tongLuong)}</div>
                                            <div class="text-sm text-green-600 font-semibold mt-1">Thực nhận: ${formatCurrency(monthData.thucNhan)}</div>
                                        </div>
                                        <div class="mt-3">
                                            <button class="inline-flex items-center px-3 py-2 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium rounded-md shadow-sm transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 w-full" onclick="showPayrollDetail(${monthData.maLuong}, true)">
                                                <i class="fas fa-eye mr-2"></i> Xem chi tiết
                                            </button>
                                        </div>
                                    </div>`;
                        });
                        html += `</div></div>`;
                    });
                } else {
                    html = `<div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 rounded-lg" role="alert">
                                <strong class="font-bold flex items-center"><i class="fas fa-info-circle mr-2"></i> Thông báo!</strong>
                                <span class="block sm:inline">${response.message}</span>
                            </div>`;
                }
                $('#myPayrollContainer').html(html);
            }).fail(function (xhr) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi!',
                    text: xhr.responseText || 'Lỗi khi tải bảng lương cá nhân.',
                    showConfirmButton: true,
                    timer: 3000,
                    timerProgressBar: true
                });
                $('#myPayrollContainer').html(`<div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg" role="alert">
                            <strong class="font-bold flex items-center"><i class="fas fa-exclamation-triangle mr-2"></i> Lỗi!</strong>
                            <span class="block sm:inline">Lỗi khi tải bảng lương cá nhân. ${xhr.responseText ? ': ' + xhr.responseText : ''}</span>
                        </div>`);
            });
        }

        function getStatusClass(status) {
            switch (status) {
                case 'BL1': return 'inline-flex items-center px-2 py-1 bg-gray-500 text-white text-xs font-medium rounded-full';
                case 'BL1A': return 'inline-flex items-center px-2 py-1 bg-blue-500 text-white text-xs font-medium rounded-full';
                case 'BL1R': return 'inline-flex items-center px-2 py-1 bg-yellow-500 text-gray-800 text-xs font-medium rounded-full';
                case 'BL2': return 'inline-flex items-center px-2 py-1 bg-indigo-500 text-white text-xs font-medium rounded-full';
                case 'BL2R': return 'inline-flex items-center px-2 py-1 bg-yellow-600 text-gray-800 text-xs font-medium rounded-full';
                case 'BL3': return 'inline-flex items-center px-2 py-1 bg-green-500 text-white text-xs font-medium rounded-full';
                case 'BL3R': return 'inline-flex items-center px-2 py-1 bg-red-500 text-white text-xs font-medium rounded-full';
                case 'BL4': return 'inline-flex items-center px-2 py-1 bg-green-600 text-white text-xs font-medium rounded-full';
                case 'BL5': return 'inline-flex items-center px-2 py-1 bg-gray-300 text-gray-800 text-xs font-medium rounded-full';
                default: return 'inline-flex items-center px-2 py-1 bg-gray-300 text-gray-800 text-xs font-medium rounded-full';
            }
        }

        function getStatusIcon(status) {
            switch (status) {
                case 'BL1': return '<i class="fas fa-hourglass-half mr-1"></i>';
                case 'BL1A': return '<i class="fas fa-check-circle mr-1"></i>';
                case 'BL1R': return '<i class="fas fa-times-circle mr-1"></i>';
                case 'BL2': return '<i class="fas fa-paper-plane mr-1"></i>';
                case 'BL2R': return '<i class="fas fa-undo mr-1"></i>';
                case 'BL3': return '<i class="fas fa-check-double mr-1"></i>';
                case 'BL3R': return '<i class="fas fa-reply mr-1"></i>';
                case 'BL4': return '<i class="fas fa-stamp mr-1"></i>';
                case 'BL5': return '<i class="fas fa-envelope-open-text mr-1"></i>';
                default: return '<i class="fas fa-question-circle mr-1"></i>';
            }
        }
    </script>
}